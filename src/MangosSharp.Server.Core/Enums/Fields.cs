namespace MangosSharp.Server.Core.Enums;

public static class Fields
{
    public const int OBJECT_FIELD_GUID = 0x0;                                       // 0x000 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int OBJECT_FIELD_TYPE = 0x2;                                       // 0x002 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int OBJECT_FIELD_ENTRY = 0x3;                                      // 0x003 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int OBJECT_FIELD_SCALE_X = 0x4;                                    // 0x004 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int OBJECT_FIELD_PADDING = 0x5;                                    // 0x005 - Size: 1 - Type: INT - Flags: NONE
    public const int OBJECT_END = 0x6;  
        
    public const int ITEM_FIELD_OWNER = OBJECT_END + 0x0;                           // 0x006 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int ITEM_FIELD_CONTAINED = OBJECT_END + 0x2;                       // 0x008 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int ITEM_FIELD_CREATOR = OBJECT_END + 0x4;                         // 0x00A - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int ITEM_FIELD_GIFTCREATOR = OBJECT_END + 0x6;                     // 0x00C - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int ITEM_FIELD_STACK_COUNT = OBJECT_END + 0x8;                     // 0x00E - Size: 1 - Type: INT - Flags: OWNER_ONLY + UNK2
    public const int ITEM_FIELD_DURATION = OBJECT_END + 0x9;                        // 0x00F - Size: 1 - Type: INT - Flags: OWNER_ONLY + UNK2
    public const int ITEM_FIELD_SPELL_CHARGES = OBJECT_END + 0xA;                   // 0x010 - Size: 5 - Type: INT - Flags: OWNER_ONLY + UNK2
    public const int ITEM_FIELD_FLAGS = OBJECT_END + 0xF;                           // 0x015 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int ITEM_FIELD_ENCHANTMENT = OBJECT_END + 0x10;                    // 0x016 - Size: 21 - Type: INT - Flags: PUBLIC
    public const int ITEM_FIELD_PROPERTY_SEED = OBJECT_END + 0x25;                  // 0x02B - Size: 1 - Type: INT - Flags: PUBLIC
    public const int ITEM_FIELD_RANDOM_PROPERTIES_ID = OBJECT_END + 0x26;           // 0x02C - Size: 1 - Type: INT - Flags: PUBLIC
    public const int ITEM_FIELD_ITEM_TEXT_ID = OBJECT_END + 0x27;                   // 0x02D - Size: 1 - Type: INT - Flags: OWNER_ONLY
    public const int ITEM_FIELD_DURABILITY = OBJECT_END + 0x28;                     // 0x02E - Size: 1 - Type: INT - Flags: OWNER_ONLY + UNK2
    public const int ITEM_FIELD_MAXDURABILITY = OBJECT_END + 0x29;                  // 0x02F - Size: 1 - Type: INT - Flags: OWNER_ONLY + UNK2
    public const int ITEM_END = OBJECT_END + 0x2A;                                  // 0x030
        
    public const int CONTAINER_FIELD_NUM_SLOTS = ITEM_END + 0x0;                    // 0x02A - Size: 1 - Type: INT - Flags: PUBLIC
    public const int CONTAINER_ALIGN_PAD = ITEM_END + 0x1;                          // 0x02B - Size: 1 - Type: BYTES - Flags: NONE
    public const int CONTAINER_FIELD_SLOT_1 = ITEM_END + 0x2;                       // 0x02C - Size: 72 - Type: GUID - Flags: PUBLIC
    public const int CONTAINER_END = ITEM_END + 0x3A;                               // 0x074
        
    public const int CORPSE_FIELD_OWNER = OBJECT_END + 0x0;                         // 0x006 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int CORPSE_FIELD_FACING = OBJECT_END + 0x2;                        // 0x008 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int CORPSE_FIELD_POS_X = OBJECT_END + 0x3;                         // 0x009 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int CORPSE_FIELD_POS_Y = OBJECT_END + 0x4;                         // 0x00A - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int CORPSE_FIELD_POS_Z = OBJECT_END + 0x5;                         // 0x00B - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int CORPSE_FIELD_DISPLAY_ID = OBJECT_END + 0x6;                    // 0x00C - Size: 1 - Type: INT - Flags: PUBLIC
    public const int CORPSE_FIELD_ITEM = OBJECT_END + 0x7;                          // 0x00D - Size: 19 - Type: INT - Flags: PUBLIC
    public const int CORPSE_FIELD_BYTES_1 = OBJECT_END + 0x1A;                      // 0x020 - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int CORPSE_FIELD_BYTES_2 = OBJECT_END + 0x1B;                      // 0x021 - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int CORPSE_FIELD_GUILD = OBJECT_END + 0x1C;                        // 0x022 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int CORPSE_FIELD_FLAGS = OBJECT_END + 0x1D;                        // 0x023 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int CORPSE_FIELD_DYNAMIC_FLAGS = OBJECT_END + 0x1E;                // 0x024 - Size: 1 - Type: INT - Flags: DYNAMIC
    public const int CORPSE_FIELD_PAD = OBJECT_END + 0x1F;                          // 0x025 - Size: 1 - Type: INT - Flags: NONE
    public const int CORPSE_END = OBJECT_END + 0x20;                                // 0x026
    
    public const int OBJECT_FIELD_CREATED_BY = OBJECT_END + 0x0;                    // 0x006 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int GAMEOBJECT_DISPLAYID = OBJECT_END + 0x2;                       // 0x008 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int GAMEOBJECT_FLAGS = OBJECT_END + 0x3;                           // 0x009 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int GAMEOBJECT_ROTATION = OBJECT_END + 0x4;                        // 0x00A - Size: 4 - Type: FLOAT - Flags: PUBLIC
    public const int GAMEOBJECT_STATE = OBJECT_END + 0x8;                           // 0x00E - Size: 1 - Type: INT - Flags: PUBLIC
    public const int GAMEOBJECT_POS_X = OBJECT_END + 0x9;                           // 0x010 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int GAMEOBJECT_POS_Y = OBJECT_END + 0xA;                           // 0x011 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int GAMEOBJECT_POS_Z = OBJECT_END + 0xB;                           // 0x012 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int GAMEOBJECT_FACING = OBJECT_END + 0xC;                          // 0x013 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int GAMEOBJECT_DYN_FLAGS = OBJECT_END + 0xD;                       // 0x014 - Size: 1 - Type: INT - Flags: DYNAMIC
    public const int GAMEOBJECT_FACTION = OBJECT_END + 0xE;                         // 0x015 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int GAMEOBJECT_TYPE_ID = OBJECT_END + 0xF;                         // 0x016 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int GAMEOBJECT_LEVEL = OBJECT_END + 0x10;                          // 0x017 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int GAMEOBJECT_ARTKIT = OBJECT_END + 0x11; 
    public const int GAMEOBJECT_ANIMPROGRESS = OBJECT_END + 0x12;   
    public const int GAMEOBJECT_PADDING = OBJECT_END + 0x13;    
    public const int GAMEOBJECT_END = OBJECT_END + 0x14;                            // 0x018
        
    public const int DYNAMICOBJECT_CASTER = OBJECT_END + 0x0;                       // 0x006 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int DYNAMICOBJECT_BYTES = OBJECT_END + 0x2;                        // 0x008 - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int DYNAMICOBJECT_SPELLID = OBJECT_END + 0x3;                      // 0x009 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int DYNAMICOBJECT_RADIUS = OBJECT_END + 0x4;                       // 0x00A - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int DYNAMICOBJECT_POS_X = OBJECT_END + 0x5;                        // 0x00B - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int DYNAMICOBJECT_POS_Y = OBJECT_END + 0x6;                        // 0x00C - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int DYNAMICOBJECT_POS_Z = OBJECT_END + 0x7;                        // 0x00D - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int DYNAMICOBJECT_FACING = OBJECT_END + 0x8;                       // 0x00E - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int DYNAMICOBJECT_PAD = OBJECT_END + 0x9;                          // 0x00F - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int DYNAMICOBJECT_END = OBJECT_END + 0xA;                          // 0x010
                      
    public const int UNIT_FIELD_CHARM = OBJECT_END + 0x0;                           // 0x006 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_SUMMON = OBJECT_END + 0x2;                          // 0x008 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_CHARMEDBY = OBJECT_END + 0x4;                       // 0x00A - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_SUMMONEDBY = OBJECT_END + 0x6;                      // 0x00C - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_CREATEDBY = OBJECT_END + 0x8;                       // 0x00E - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_TARGET = OBJECT_END + 0xA;                          // 0x010 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_PERSUADED = OBJECT_END + 0xC;                       // 0x012 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_CHANNEL_OBJECT = OBJECT_END + 0xE;                  // 0x014 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int UNIT_FIELD_HEALTH = OBJECT_END + 0x10;                         // 0x016 - Size: 1 - Type: INT - Flags: DYNAMIC
    public const int UNIT_FIELD_POWER1 = OBJECT_END + 0x11;                         // 0x017 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_POWER2 = OBJECT_END + 0x12;                         // 0x018 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_POWER3 = OBJECT_END + 0x13;                         // 0x019 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_POWER4 = OBJECT_END + 0x14;                         // 0x01A - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_POWER5 = OBJECT_END + 0x15;                         // 0x01B - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_MAXHEALTH = OBJECT_END + 0x16;                      // 0x01C - Size: 1 - Type: INT - Flags: DYNAMIC
    public const int UNIT_FIELD_MAXPOWER1 = OBJECT_END + 0x17;                      // 0x01D - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_MAXPOWER2 = OBJECT_END + 0x18;                      // 0x01E - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_MAXPOWER3 = OBJECT_END + 0x19;                      // 0x01F - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_MAXPOWER4 = OBJECT_END + 0x1A;                      // 0x020 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_MAXPOWER5 = OBJECT_END + 0x1B;                      // 0x021 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_LEVEL = OBJECT_END + 0x1C;                          // 0x022 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_FACTIONTEMPLATE = OBJECT_END + 0x1D;                // 0x023 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_BYTES_0 = OBJECT_END + 0x1E;                        // 0x024 - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int UNIT_VIRTUAL_ITEM_SLOT_DISPLAY = OBJECT_END + 0x1F;            // 0x025 - Size: 3 - Type: INT - Flags: PUBLIC
    public const int UNIT_VIRTUAL_ITEM_INFO = OBJECT_END + 0x22;                    // 0x028 - Size: 6 - Type: BYTES - Flags: PUBLIC
    public const int UNIT_FIELD_FLAGS = OBJECT_END + 0x28;                          // 0x02E - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_AURA = OBJECT_END + 0x29;                           // 0x02F - Size: 48 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_AURAFLAGS = OBJECT_END + 0x59;                      // 0x05F - Size: 6 - Type: BYTES - Flags: PUBLIC
    public const int UNIT_FIELD_AURALEVELS = OBJECT_END + 0x5F;                     // 0x065 - Size: 12 - Type: BYTES - Flags: PUBLIC
    public const int UNIT_FIELD_AURAAPPLICATIONS = OBJECT_END + 0x6B;               // 0x071 - Size: 12 - Type: BYTES - Flags: PUBLIC
    public const int UNIT_FIELD_AURASTATE = OBJECT_END + 0x77;                      // 0x07D - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_BASEATTACKTIME = OBJECT_END + 0x78;                 // 0x07E - Size: 2 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_OFFHANDATTACKTIME = OBJECT_END + 0x79;
    public const int UNIT_FIELD_RANGEDATTACKTIME = OBJECT_END + 0x7A;               // 0x080 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int UNIT_FIELD_BOUNDINGRADIUS = OBJECT_END + 0x7B;                 // 0x081 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int UNIT_FIELD_COMBATREACH = OBJECT_END + 0x7C;                    // 0x082 - Size: 1 - Type: FLOAT - Flags: PUBLIC
    public const int UNIT_FIELD_DISPLAYID = OBJECT_END + 0x7D;                      // 0x083 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_NATIVEDISPLAYID = OBJECT_END + 0x7E;                // 0x084 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_MOUNTDISPLAYID = OBJECT_END + 0x7F;                 // 0x085 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_MINDAMAGE = OBJECT_END + 0x80;                      // 0x086 - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY + UNK3
    public const int UNIT_FIELD_MAXDAMAGE = OBJECT_END + 0x81;                      // 0x087 - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY + UNK3
    public const int UNIT_FIELD_MINOFFHANDDAMAGE = OBJECT_END + 0x82;               // 0x088 - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY + UNK3
    public const int UNIT_FIELD_MAXOFFHANDDAMAGE = OBJECT_END + 0x83;               // 0x089 - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY + UNK3
    public const int UNIT_FIELD_BYTES_1 = OBJECT_END + 0x84;                        // 0x08A - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int UNIT_FIELD_PETNUMBER = OBJECT_END + 0x85;                      // 0x08B - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_PET_NAME_TIMESTAMP = OBJECT_END + 0x86;             // 0x08C - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_FIELD_PETEXPERIENCE = OBJECT_END + 0x87;                  // 0x08D - Size: 1 - Type: INT - Flags: OWNER_ONLY
    public const int UNIT_FIELD_PETNEXTLEVELEXP = OBJECT_END + 0x88;                // 0x08E - Size: 1 - Type: INT - Flags: OWNER_ONLY
    public const int UNIT_DYNAMIC_FLAGS = OBJECT_END + 0x89;                        // 0x08F - Size: 1 - Type: INT - Flags: DYNAMIC
    public const int UNIT_CHANNEL_SPELL = OBJECT_END + 0x8A;                        // 0x090 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_MOD_CAST_SPEED = OBJECT_END + 0x8B;                       // 0x091 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_CREATED_BY_SPELL = OBJECT_END + 0x8C;                     // 0x092 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_NPC_FLAGS = OBJECT_END + 0x8D;                            // 0x093 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_NPC_EMOTESTATE = OBJECT_END + 0x8E;                       // 0x094 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int UNIT_TRAINING_POINTS = OBJECT_END + 0x8F;                      // 0x095 - Size: 1 - Type: TWO_SHORT - Flags: OWNER_ONLY
    public const int UNIT_FIELD_STAT0 = OBJECT_END + 0x90;                          // 0x096 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_STAT1 = OBJECT_END + 0x91;                          // 0x097 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_STAT2 = OBJECT_END + 0x92;                          // 0x098 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_STAT3 = OBJECT_END + 0x93;                          // 0x099 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_STAT4 = OBJECT_END + 0x94;                          // 0x09A - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_RESISTANCES = OBJECT_END + 0x95;                    // 0x09B - Size: 7 - Type: INT - Flags: PRIVATE + OWNER_ONLY + UNK3
    public const int UNIT_FIELD_BASE_MANA = OBJECT_END + 0x9C;                      // 0x0A2 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_BASE_HEALTH = OBJECT_END + 0x9D;                    // 0x0A3 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_BYTES_2 = OBJECT_END + 0x9E;                        // 0x0A4 - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int UNIT_FIELD_ATTACK_POWER = OBJECT_END + 0x9F;                   // 0x0A5 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_ATTACK_POWER_MODS = OBJECT_END + 0xA0;              // 0x0A6 - Size: 1 - Type: TWO_SHORT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_ATTACK_POWER_MULTIPLIER = OBJECT_END + 0xA1;        // 0x0A7 - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_RANGED_ATTACK_POWER = OBJECT_END + 0xA2;            // 0x0A8 - Size: 1 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_RANGED_ATTACK_POWER_MODS = OBJECT_END + 0xA3;       // 0x0A9 - Size: 1 - Type: TWO_SHORT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_RANGED_ATTACK_POWER_MULTIPLIER = OBJECT_END + 0xA4; // 0x0AA - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_MINRANGEDDAMAGE = OBJECT_END + 0xA5;                // 0x0AB - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_MAXRANGEDDAMAGE = OBJECT_END + 0xA6;                // 0x0AC - Size: 1 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_POWER_COST_MODIFIER = OBJECT_END + 0xA7;            // 0x0AD - Size: 7 - Type: INT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_POWER_COST_MULTIPLIER = OBJECT_END + 0xAE;          // 0x0B4 - Size: 7 - Type: FLOAT - Flags: PRIVATE + OWNER_ONLY
    public const int UNIT_FIELD_PADDING = OBJECT_END + 0xB5;                        // 0x0BB - Size: 1 - Type: INT - Flags: NONE
    public const int UNIT_END = OBJECT_END + 0xB6;                                  // 0x0BC
    public const int UNIT_FIELD_STRENGTH = UNIT_FIELD_STAT0;
    public const int UNIT_FIELD_AGILITY = UNIT_FIELD_STAT1;
    public const int UNIT_FIELD_STAMINA = UNIT_FIELD_STAT2;
    public const int UNIT_FIELD_SPIRIT = UNIT_FIELD_STAT3;
    public const int UNIT_FIELD_INTELLECT = UNIT_FIELD_STAT4;
    
    public const int PLAYER_DUEL_ARBITER = UNIT_END + 0x0;                          // 0x0B8 - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int PLAYER_FLAGS = UNIT_END + 0x2;                                 // 0x0BA - Size: 1 - Type: INT - Flags: PUBLIC
    public const int PLAYER_GUILDID = UNIT_END + 0x3;                               // 0x0BB - Size: 1 - Type: INT - Flags: PUBLIC
    public const int PLAYER_GUILDRANK = UNIT_END + 0x4;                             // 0x0BC - Size: 1 - Type: INT - Flags: PUBLIC
    public const int PLAYER_BYTES = UNIT_END + 0x5;                                 // 0x0BD - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int PLAYER_BYTES_2 = UNIT_END + 0x6;                               // 0x0BE - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int PLAYER_BYTES_3 = UNIT_END + 0x7;                               // 0x0BF - Size: 1 - Type: BYTES - Flags: PUBLIC
    public const int PLAYER_DUEL_TEAM = UNIT_END + 0x8;                             // 0x0C0 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int PLAYER_GUILD_TIMESTAMP = UNIT_END + 0x9;                       // 0x0C1 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int PLAYER_QUEST_LOG_1_1 = UNIT_END + 0xA;                         // 0x0C2 - Size: 1 - Type: INT - Flags: GROUP_ONLY
    public const int PLAYER_QUEST_LOG_1_2 = UNIT_END + 0xB;                         // 0x0C3 - Size: 2 - Type: INT - Flags: PRIVATE
    public const int PLAYER_QUEST_LOG_1_3 = UNIT_END + 0xC;                         
    public const int PLAYER_QUEST_LOG_LAST_1 = UNIT_END + 0x43;                     
    public const int PLAYER_QUEST_LOG_LAST_2 = UNIT_END + 0x44;                     
    public const int PLAYER_QUEST_LOG_LAST_3 = UNIT_END + 0x45;                     
    public const int PLAYER_VISIBLE_ITEM_1_CREATOR = UNIT_END + 0x46;               // 0x0FE - Size: 2 - Type: GUID - Flags: PUBLIC
    public const int PLAYER_VISIBLE_ITEM_1_0 = UNIT_END + 0x48;                     // 0x100 - Size: 8 - Type: INT - Flags: PUBLIC
    public const int PLAYER_VISIBLE_ITEM_1_PROPERTIES = UNIT_END + 0x50;            // 0x108 - Size: 1 - Type: TWO_SHORT - Flags: PUBLIC
    public const int PLAYER_VISIBLE_ITEM_1_PAD = UNIT_END + 0x51;                   // 0x109 - Size: 1 - Type: INT - Flags: PUBLIC
    public const int PLAYER_VISIBLE_ITEM_LAST_CREATOR = UNIT_END + 0x11E;           
    public const int PLAYER_VISIBLE_ITEM_LAST_0 = UNIT_END + 0x120;                 
    public const int PLAYER_VISIBLE_ITEM_LAST_PROPERTIES = UNIT_END + 0x128;        
    public const int PLAYER_VISIBLE_ITEM_LAST_PAD = UNIT_END + 0x129;               
    public const int PLAYER_FIELD_INV_SLOT_HEAD = UNIT_END + 0x12A;                 // 0x1E2 - Size: 46 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_FIELD_PACK_SLOT_1 = UNIT_END + 0x158;                   // 0x210 - Size: 32 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_FIELD_PACK_SLOT_LAST = UNIT_END + 0x176;                
    public const int PLAYER_FIELD_BANK_SLOT_1 = UNIT_END + 0x178;                   // 0x230 - Size: 48 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_FIELD_BANK_SLOT_LAST = UNIT_END + 0x1A6;                
    public const int PLAYER_FIELD_BANKBAG_SLOT_1 = UNIT_END + 0x1A8;                // 0x260 - Size: 12 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_FIELD_BANKBAG_SLOT_LAST = UNIT_END + 0x1B2;             
    public const int PLAYER_FIELD_VENDORBUYBACK_SLOT_1 = UNIT_END + 0x1B4;          // 0x26C - Size: 24 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_FIELD_VENDORBUYBACK_SLOT_LAST = UNIT_END + 0x1CA;       
    public const int PLAYER_FIELD_KEYRING_SLOT_1 = UNIT_END + 0x1CC;                // 0x284 - Size: 64 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_FIELD_KEYRING_SLOT_LAST = UNIT_END + 0x20A;             
    public const int PLAYER_FARSIGHT = UNIT_END + 0x20C;                            // 0x2C4 - Size: 2 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_FIELD_COMBO_TARGET = UNIT_END + 0x20E;                  // 0x2C6 - Size: 2 - Type: GUID - Flags: PRIVATE
    public const int PLAYER_XP = UNIT_END + 0x210;                                  // 0x2C8 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_NEXT_LEVEL_XP = UNIT_END + 0x211;                       // 0x2C9 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_SKILL_INFO_1_1 = UNIT_END + 0x212;                      // 0x2CA - Size: 384 - Type: TWO_SHORT - Flags: PRIVATE
    public const int PLAYER_CHARACTER_POINTS1 = UNIT_END + 0x392;                   // 0x44A - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_CHARACTER_POINTS2 = UNIT_END + 0x393;                   // 0x44B - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_TRACK_CREATURES = UNIT_END + 0x394;                     // 0x44C - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_TRACK_RESOURCES = UNIT_END + 0x395;                     // 0x44D - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_BLOCK_PERCENTAGE = UNIT_END + 0x396;                    // 0x44E - Size: 1 - Type: FLOAT - Flags: PRIVATE
    public const int PLAYER_DODGE_PERCENTAGE = UNIT_END + 0x397;                    // 0x44F - Size: 1 - Type: FLOAT - Flags: PRIVATE
    public const int PLAYER_PARRY_PERCENTAGE = UNIT_END + 0x398;                    // 0x450 - Size: 1 - Type: FLOAT - Flags: PRIVATE
    public const int PLAYER_CRIT_PERCENTAGE = UNIT_END + 0x399;                     // 0x451 - Size: 1 - Type: FLOAT - Flags: PRIVATE
    public const int PLAYER_RANGED_CRIT_PERCENTAGE = UNIT_END + 0x39A;              // 0x452 - Size: 1 - Type: FLOAT - Flags: PRIVATE
    public const int PLAYER_EXPLORED_ZONES_1 = UNIT_END + 0x39B;                    // 0x453 - Size: 64 - Type: BYTES - Flags: PRIVATE
    public const int PLAYER_REST_STATE_EXPERIENCE = UNIT_END + 0x3DB;               // 0x493 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_COINAGE = UNIT_END + 0x3DC;                       // 0x494 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_POSSTAT0 = UNIT_END + 0x3DD;                      // 0x495 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_POSSTAT1 = UNIT_END + 0x3DE;                      // 0x496 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_POSSTAT2 = UNIT_END + 0x3DF;                      // 0x497 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_POSSTAT3 = UNIT_END + 0x3E0;                      // 0x498 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_POSSTAT4 = UNIT_END + 0x3E1;                      // 0x499 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_NEGSTAT0 = UNIT_END + 0x3E2;                      // 0x49A - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_NEGSTAT1 = UNIT_END + 0x3E3;                      // 0x49B - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_NEGSTAT2 = UNIT_END + 0x3E4;                      // 0x49C - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_NEGSTAT3 = UNIT_END + 0x3E5;                      // 0x49D - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_NEGSTAT4 = UNIT_END + 0x3E6;                      // 0x49E - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_RESISTANCEBUFFMODSPOSITIVE = UNIT_END + 0x3E7;    // 0x49F - Size: 7 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_RESISTANCEBUFFMODSNEGATIVE = UNIT_END + 0x3EE;    // 0x4A6 - Size: 7 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_MOD_DAMAGE_DONE_POS = UNIT_END + 0x3F5;           // 0x4AD - Size: 7 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_MOD_DAMAGE_DONE_NEG = UNIT_END + 0x3FC;           // 0x4B4 - Size: 7 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_MOD_DAMAGE_DONE_PCT = UNIT_END + 0x403;           // 0x4BB - Size: 7 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_BYTES = UNIT_END + 0x40A;                         // 0x4C2 - Size: 1 - Type: BYTES - Flags: PRIVATE
    public const int PLAYER_AMMO_ID = UNIT_END + 0x40B;                             // 0x4C3 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_SELF_RES_SPELL = UNIT_END + 0x40C;                      // 0x4C4 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_PVP_MEDALS = UNIT_END + 0x40D;                    // 0x4C5 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_BUYBACK_PRICE_1 = UNIT_END + 0x40E;               // 0x4C6 - Size: 12 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_BUYBACK_PRICE_LAST = UNIT_END + 0x419;            
    public const int PLAYER_FIELD_BUYBACK_TIMESTAMP_1 = UNIT_END + 0x41A;           // 0x4D2 - Size: 12 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_BUYBACK_TIMESTAMP_LAST = UNIT_END + 0x425;        
    public const int PLAYER_FIELD_SESSION_KILLS = UNIT_END + 0x426;                 // 0x4DE - Size: 1 - Type: TWO_SHORT - Flags: PRIVATE
    public const int PLAYER_FIELD_YESTERDAY_KILLS = UNIT_END + 0x427;               // 0x4DF - Size: 1 - Type: TWO_SHORT - Flags: PRIVATE
    public const int PLAYER_FIELD_LAST_WEEK_KILLS = UNIT_END + 0x428;               // 0x4E0 - Size: 1 - Type: TWO_SHORT - Flags: PRIVATE
    public const int PLAYER_FIELD_THIS_WEEK_KILLS = UNIT_END + 0x429;               // 0x4E1 - Size: 1 - Type: TWO_SHORT - Flags: PRIVATE
    public const int PLAYER_FIELD_THIS_WEEK_CONTRIBUTION = UNIT_END + 0x42A;        // 0x4E2 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_LIFETIME_HONORBALE_KILLS = UNIT_END + 0x42B;      // 0x4E3 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_LIFETIME_DISHONORBALE_KILLS = UNIT_END + 0x42C;   // 0x4E4 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_YESTERDAY_CONTRIBUTION = UNIT_END + 0x42D;        // 0x4E5 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_LAST_WEEK_CONTRIBUTION = UNIT_END + 0x42E;        // 0x4E6 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_LAST_WEEK_RANK = UNIT_END + 0x42F;                // 0x4E7 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_BYTES2 = UNIT_END + 0x430;                        // 0x4E8 - Size: 1 - Type: BYTES - Flags: PRIVATE
    public const int PLAYER_FIELD_WATCHED_FACTION_INDEX = UNIT_END + 0x431;         // 0x4E9 - Size: 1 - Type: INT - Flags: PRIVATE
    public const int PLAYER_FIELD_COMBAT_RATING_1 = UNIT_END + 0x432;               
    public const int PLAYER_END = UNIT_END + 0x446;                                 // 0x4EA
} 