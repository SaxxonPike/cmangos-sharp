using MangosSharp.Data.Entities.MangosDatabase;
using Microsoft.EntityFrameworkCore;

/* THIS FILE IS AUTOMATICALLY GENERATED */

namespace MangosSharp.Data.Context;

public sealed class ClassicmangosDbContext : DbContext
{
    public ClassicmangosDbContext() {}
    public ClassicmangosDbContext(DbContextOptions options) : base(options) {}
    protected override void OnModelCreating(ModelBuilder builder)
    {
        builder.Entity<AreatriggerInvolvedrelation>().HasKey(e => new { e.Id });
        builder.Entity<AreatriggerTavern>().HasKey(e => new { e.Id });
        builder.Entity<AreatriggerTeleport>().HasKey(e => new { e.Id });
        builder.Entity<Auction>().HasKey(e => new { e.Id });
        builder.Entity<BattlegroundEvents>().HasKey(e => new { e.Description, e.Event1, e.Event2, e.Map });
        builder.Entity<BattlegroundTemplate>().HasKey(e => new { e.Id });
        builder.Entity<BattlemasterEntry>().HasKey(e => new { e.BgTemplate, e.Entry });
        builder.Entity<BroadcastText>().HasKey(e => new { e.Id });
        builder.Entity<BroadcastTextLocale>().HasKey(e => new { e.Id, e.Locale });
        builder.Entity<Bugreport>().HasKey(e => new { e.Id });
        builder.Entity<Command>().HasKey(e => new { e.Help, e.Name });
        builder.Entity<Conditions>().HasKey(e => new { e.Comments, e.ConditionEntry });
        builder.Entity<Creature>().HasKey(e => new { e.Curhealth, e.Guid });
        builder.Entity<CreatureAddon>().HasKey(e => new { e.Auras, e.Guid });
        builder.Entity<CreatureAiScripts>().HasKey(e => new { e.Id });
        builder.Entity<CreatureAiSummons>().HasKey(e => new { e.Id });
        builder.Entity<CreatureAiTexts>().HasKey(e => new { e.BroadcastTextId, e.Entry });
        builder.Entity<CreatureBattleground>().HasKey(e => new { e.Event1, e.Guid });
        builder.Entity<CreatureConditionalSpawn>().HasKey(e => new { e.Comments, e.Guid });
        builder.Entity<CreatureCooldowns>().HasKey(e => new { e.CooldownMax, e.Entry, e.SpellId });
        builder.Entity<CreatureEquipTemplate>().HasKey(e => new { e.Entry });
        builder.Entity<CreatureImmunities>().HasKey(e => new { e.Entry, e.SetId, e.Type, e.Value });
        builder.Entity<CreatureInvolvedrelation>().HasKey(e => new { e.Id, e.Quest });
        builder.Entity<CreatureLinking>().HasKey(e => new { e.Flag, e.Guid });
        builder.Entity<CreatureLinkingTemplate>().HasKey(e => new { e.Entry, e.Map });
        builder.Entity<CreatureLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<CreatureModelInfo>().HasKey(e => new { e.BoundingRadius, e.Modelid });
        builder.Entity<CreatureModelRace>().HasKey(e => new { e.CreatureEntry, e.Modelid, e.Racemask });
        builder.Entity<CreatureMovement>().HasKey(e => new { e.Id, e.Point });
        builder.Entity<CreatureMovementTemplate>().HasKey(e => new { e.Comment, e.Entry, e.PathId, e.Point });
        builder.Entity<CreatureOnkillReputation>().HasKey(e => new { e.CreatureId });
        builder.Entity<CreatureQuestrelation>().HasKey(e => new { e.Id, e.Quest });
        builder.Entity<CreatureSpawnData>().HasKey(e => new { e.Guid });
        builder.Entity<CreatureSpawnDataTemplate>().HasKey(e => new { e.CurHealth, e.CurMana, e.Entry, e.EquipmentId, e.ModelId, e.SpawnFlags, e.UnitFlags });
        builder.Entity<CreatureSpawnEntry>().HasKey(e => new { e.Entry, e.Guid });
        builder.Entity<CreatureSpellList>().HasKey(e => new { e.Id, e.Position });
        builder.Entity<CreatureSpellListEntry>().HasKey(e => new { e.Id });
        builder.Entity<CreatureSpellTargeting>().HasKey(e => new { e.Id });
        builder.Entity<CreatureTemplate>().HasKey(e => new { e.AIName, e.Entry });
        builder.Entity<CreatureTemplateAddon>().HasKey(e => new { e.Auras, e.Entry });
        builder.Entity<CreatureTemplateArmor>().HasKey(e => new { e.AIName, e.Entry });
        builder.Entity<CreatureTemplateClasslevelstats>().HasKey(e => new { e.BaseArmor, e.Class, e.Level });
        builder.Entity<CreatureTemplateSpells>().HasKey(e => new { e.Entry, e.SetId });
        builder.Entity<CustomTexts>().HasKey(e => new { e.BroadcastTextId, e.Entry });
        builder.Entity<DbscriptRandomTemplates>().HasKey(e => new { e.Id, e.TargetId, e.Type });
        builder.Entity<DbscriptString>().HasKey(e => new { e.BroadcastTextId, e.Entry });
        builder.Entity<DbscriptStringTemplate>().HasKey(e => new { e.Id, e.StringId });
        builder.Entity<DbscriptsOnCreatureDeath>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnCreatureMovement>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnEvent>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnGoTemplateUse>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnGoUse>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnGossip>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnQuestEnd>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnQuestStart>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnRelay>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DbscriptsOnSpell>().HasKey(e => new { e.BuddyEntry });
        builder.Entity<DisenchantLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<ExplorationBasexp>().HasKey(e => new { e.Basexp, e.Level });
        builder.Entity<FishingLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<GameEvent>().HasKey(e => new { e.Description, e.Entry });
        builder.Entity<GameEventCreature>().HasKey(e => new { e.Event, e.Guid });
        builder.Entity<GameEventCreatureData>().HasKey(e => new { e.EntryId, e.Event, e.Guid });
        builder.Entity<GameEventGameobject>().HasKey(e => new { e.Event, e.Guid });
        builder.Entity<GameEventMail>().HasKey(e => new { e.Event, e.Quest, e.RaceMask });
        builder.Entity<GameEventQuest>().HasKey(e => new { e.Event, e.Quest });
        builder.Entity<GameEventTime>().HasKey(e => new { e.EndTime, e.Entry });
        builder.Entity<GameGraveyardZone>().HasKey(e => new { e.GhostLoc, e.Id, e.LinkKind });
        builder.Entity<GameTele>().HasKey(e => new { e.Id });
        builder.Entity<GameWeather>().HasKey(e => new { e.FallRainChance, e.Zone });
        builder.Entity<Gameobject>().HasKey(e => new { e.Animprogress, e.Guid });
        builder.Entity<GameobjectAddon>().HasKey(e => new { e.Guid });
        builder.Entity<GameobjectBattleground>().HasKey(e => new { e.Event1, e.Guid });
        builder.Entity<GameobjectInvolvedrelation>().HasKey(e => new { e.Id, e.Quest });
        builder.Entity<GameobjectLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<GameobjectQuestrelation>().HasKey(e => new { e.Id, e.Quest });
        builder.Entity<GameobjectSpawnEntry>().HasKey(e => new { e.Entry, e.Guid });
        builder.Entity<GameobjectTemplate>().HasKey(e => new { e.CustomData1, e.Entry });
        builder.Entity<GossipMenu>().HasKey(e => new { e.ConditionId, e.Entry, e.ScriptId, e.TextId });
        builder.Entity<GossipMenuOption>().HasKey(e => new { e.Id, e.MenuId });
        builder.Entity<GossipTexts>().HasKey(e => new { e.Comment, e.Entry });
        builder.Entity<InstanceDungeonEncounters>().HasKey(e => new { e.Id });
        builder.Entity<InstanceEncounters>().HasKey(e => new { e.CreditEntry, e.Entry });
        builder.Entity<InstanceTemplate>().HasKey(e => new { e.GhostEntranceMap, e.Map });
        builder.Entity<ItemConvert>().HasKey(e => new { e.Entry });
        builder.Entity<ItemEnchantmentTemplate>().HasKey(e => new { e.Chance, e.Ench, e.Entry });
        builder.Entity<ItemExpireConvert>().HasKey(e => new { e.Entry });
        builder.Entity<ItemLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<ItemRequiredTarget>().HasKey(e => new { e.Entry, e.TargetEntry, e.Type });
        builder.Entity<ItemTemplate>().HasKey(e => new { e.AllowableClass, e.Entry });
        builder.Entity<LocalesAreatriggerTeleport>().HasKey(e => new { e.Entry });
        builder.Entity<LocalesCreature>().HasKey(e => new { e.Entry });
        builder.Entity<LocalesGameobject>().HasKey(e => new { e.Entry });
        builder.Entity<LocalesGossipMenuOption>().HasKey(e => new { e.Id, e.MenuId });
        builder.Entity<LocalesItem>().HasKey(e => new { e.DescriptionLoc1, e.Entry });
        builder.Entity<LocalesNpcText>().HasKey(e => new { e.Entry });
        builder.Entity<LocalesPageText>().HasKey(e => new { e.Entry });
        builder.Entity<LocalesPointsOfInterest>().HasKey(e => new { e.Entry });
        builder.Entity<LocalesQuest>().HasKey(e => new { e.DetailsLoc1, e.Entry });
        builder.Entity<LocalesQuestgiverGreeting>().HasKey(e => new { e.Entry, e.Type });
        builder.Entity<LocalesTrainerGreeting>().HasKey(e => new { e.Entry });
        builder.Entity<MailLevelReward>().HasKey(e => new { e.Level, e.RaceMask });
        builder.Entity<MailLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<MangosString>().HasKey(e => new { e.ContentDefault, e.Entry });
        builder.Entity<NpcGossip>().HasKey(e => new { e.NpcGuid });
        builder.Entity<NpcSpellclickSpells>().HasKey(e => new { e.CastFlags });
        builder.Entity<NpcText>().HasKey(e => new { e.ID });
        builder.Entity<NpcTextBroadcastText>().HasKey(e => new { e.Id });
        builder.Entity<NpcTrainer>().HasKey(e => new { e.ConditionId, e.Entry, e.Spell });
        builder.Entity<NpcTrainerTemplate>().HasKey(e => new { e.ConditionId, e.Entry, e.Spell });
        builder.Entity<NpcVendor>().HasKey(e => new { e.Comments, e.Entry, e.Item });
        builder.Entity<NpcVendorTemplate>().HasKey(e => new { e.Comments, e.Entry, e.Item });
        builder.Entity<PageText>().HasKey(e => new { e.Entry });
        builder.Entity<PetFamilystats>().HasKey(e => new { e.ArmorModifier, e.Family });
        builder.Entity<PetLevelstats>().HasKey(e => new { e.Agi, e.CreatureEntry, e.Level });
        builder.Entity<PetLevelstatsCopy>().HasKey(e => new { e.Agi, e.CreatureEntry, e.Level });
        builder.Entity<PetNameGeneration>().HasKey(e => new { e.Id });
        builder.Entity<PetcreateinfoSpell>().HasKey(e => new { e.Entry });
        builder.Entity<PickpocketingLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<PlayerClasslevelstats>().HasKey(e => new { e.Basehp, e.Class, e.Level });
        builder.Entity<PlayerLevelstats>().HasKey(e => new { e.Agi, e.Class, e.Level, e.Race });
        builder.Entity<PlayerXpForLevel>().HasKey(e => new { e.Lvl });
        builder.Entity<Playercreateinfo>().HasKey(e => new { e.Class, e.Race });
        builder.Entity<PlayercreateinfoAction>().HasKey(e => new { e.Action, e.Button, e.Class, e.Race });
        builder.Entity<PlayercreateinfoItem>().HasKey(e => new { e.Amount });
        builder.Entity<PlayercreateinfoSkills>().HasKey(e => new { e.ClassMask, e.RaceMask, e.Skill });
        builder.Entity<PlayercreateinfoSpell>().HasKey(e => new { e.Class, e.Race, e.Spell });
        builder.Entity<PointsOfInterest>().HasKey(e => new { e.Data, e.Entry });
        builder.Entity<PoolCreature>().HasKey(e => new { e.Chance, e.Guid });
        builder.Entity<PoolCreatureTemplate>().HasKey(e => new { e.Id });
        builder.Entity<PoolGameobject>().HasKey(e => new { e.Chance, e.Guid });
        builder.Entity<PoolGameobjectTemplate>().HasKey(e => new { e.Id });
        builder.Entity<PoolPool>().HasKey(e => new { e.Chance, e.PoolId });
        builder.Entity<PoolTemplate>().HasKey(e => new { e.Description, e.Entry });
        builder.Entity<ProspectingLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<QuestPoi>().HasKey(e => new { e.FloorId, e.PoiId, e.QuestId });
        builder.Entity<QuestPoiPoints>().HasKey(e => new { e.PoiId });
        builder.Entity<QuestTemplate>().HasKey(e => new { e.CompleteEmote, e.Entry });
        builder.Entity<QuestgiverGreeting>().HasKey(e => new { e.EmoteDelay, e.Entry, e.Type });
        builder.Entity<ReferenceLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<ReferenceLootTemplateNames>().HasKey(e => new { e.Entry });
        builder.Entity<ReputationRewardRate>().HasKey(e => new { e.CreatureRate, e.Faction });
        builder.Entity<ReputationSpilloverTemplate>().HasKey(e => new { e.Faction });
        builder.Entity<ReservedName>().HasKey(e => new { e.Name });
        builder.Entity<ScriptTexts>().HasKey(e => new { e.BroadcastTextId, e.Entry });
        builder.Entity<ScriptWaypoint>().HasKey(e => new { e.Comment, e.Entry, e.PathId, e.Point });
        builder.Entity<ScriptedAreatrigger>().HasKey(e => new { e.Entry });
        builder.Entity<ScriptedEventId>().HasKey(e => new { e.Id });
        builder.Entity<SkillDiscoveryTemplate>().HasKey(e => new { e.Chance, e.ReqSpell, e.SpellId });
        builder.Entity<SkillExtraItemTemplate>().HasKey(e => new { e.AdditionalCreateChance, e.SpellId });
        builder.Entity<SkillFishingBaseLevel>().HasKey(e => new { e.Entry });
        builder.Entity<SkinningLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<SpamRecords>().HasKey(e => new { e.Id });
        builder.Entity<SpawnGroup>().HasKey(e => new { e.Id });
        builder.Entity<SpawnGroupEntry>().HasKey(e => new { e.Entry, e.Id });
        builder.Entity<SpawnGroupFormation>().HasKey(e => new { e.Id });
        builder.Entity<SpawnGroupLinkedGroup>().HasKey(e => new { e.Id, e.LinkedId });
        builder.Entity<SpawnGroupSpawn>().HasKey(e => new { e.Guid, e.Id });
        builder.Entity<SpellAffect>().HasKey(e => new { e.EffectId, e.Entry });
        builder.Entity<SpellArea>().HasKey(e => new { e.Area, e.AuraSpell, e.Gender, e.QuestStart, e.QuestStartActive, e.Racemask, e.Spell });
        builder.Entity<SpellBonusData>().HasKey(e => new { e.ApBonus, e.Entry });
        builder.Entity<SpellChain>().HasKey(e => new { e.FirstSpell, e.SpellId });
        builder.Entity<SpellCone>().HasKey(e => new { e.Id });
        builder.Entity<SpellElixir>().HasKey(e => new { e.Entry });
        builder.Entity<SpellFacing>().HasKey(e => new { e.Entry });
        builder.Entity<SpellLearnSpell>().HasKey(e => new { e.Active, e.Entry, e.SpellID });
        builder.Entity<SpellLootTemplate>().HasKey(e => new { e.ChanceOrQuestChance, e.Entry, e.Item });
        builder.Entity<SpellPetAuras>().HasKey(e => new { e.Aura, e.Pet, e.Spell });
        builder.Entity<SpellProcEvent>().HasKey(e => new { e.Cooldown, e.Entry });
        builder.Entity<SpellProcItemEnchant>().HasKey(e => new { e.Entry });
        builder.Entity<SpellScriptTarget>().HasKey(e => new { e.Entry, e.TargetEntry, e.Type });
        builder.Entity<SpellScripts>().HasKey(e => new { e.Id });
        builder.Entity<SpellTargetPosition>().HasKey(e => new { e.Id });
        builder.Entity<SpellTemplate>().HasKey(e => new { e.Id });
        builder.Entity<SpellThreat>().HasKey(e => new { e.ApBonus, e.Entry });
        builder.Entity<TaxiShortcuts>().HasKey(e => new { e.Comments, e.Pathid });
        builder.Entity<TrainerGreeting>().HasKey(e => new { e.Entry });
        builder.Entity<Transports>().HasKey(e => new { e.Entry });
        builder.Entity<VehicleAccessory>().HasKey(e => new { e.AccessoryEntry, e.Seat, e.VehicleEntry });
        builder.Entity<WardenScans>().HasKey(e => new { e.Id });
        builder.Entity<WaypointPath>().HasKey(e => new { e.Comment, e.PathId, e.Point });
        builder.Entity<WorldSafeLocs>().HasKey(e => new { e.Id });
        builder.Entity<WorldTemplate>().HasKey(e => new { e.Map });
    }

    public DbSet<AreatriggerInvolvedrelation> AreatriggerInvolvedrelations { get; set; }
    public DbSet<AreatriggerTavern> AreatriggerTaverns { get; set; }
    public DbSet<AreatriggerTeleport> AreatriggerTeleports { get; set; }
    public DbSet<Auction> Auctions { get; set; }
    public DbSet<BattlegroundEvents> BattlegroundEvents { get; set; }
    public DbSet<BattlegroundTemplate> BattlegroundTemplates { get; set; }
    public DbSet<BattlemasterEntry> BattlemasterEntries { get; set; }
    public DbSet<BroadcastText> BroadcastTexts { get; set; }
    public DbSet<BroadcastTextLocale> BroadcastTextLocales { get; set; }
    public DbSet<Bugreport> Bugreports { get; set; }
    public DbSet<Command> Commands { get; set; }
    public DbSet<Conditions> Conditions { get; set; }
    public DbSet<Creature> Creatures { get; set; }
    public DbSet<CreatureAddon> CreatureAddons { get; set; }
    public DbSet<CreatureAiScripts> CreatureAiScripts { get; set; }
    public DbSet<CreatureAiSummons> CreatureAiSummons { get; set; }
    public DbSet<CreatureAiTexts> CreatureAiTexts { get; set; }
    public DbSet<CreatureBattleground> CreatureBattlegrounds { get; set; }
    public DbSet<CreatureConditionalSpawn> CreatureConditionalSpawns { get; set; }
    public DbSet<CreatureCooldowns> CreatureCooldowns { get; set; }
    public DbSet<CreatureEquipTemplate> CreatureEquipTemplates { get; set; }
    public DbSet<CreatureImmunities> CreatureImmunities { get; set; }
    public DbSet<CreatureInvolvedrelation> CreatureInvolvedrelations { get; set; }
    public DbSet<CreatureLinking> CreatureLinkings { get; set; }
    public DbSet<CreatureLinkingTemplate> CreatureLinkingTemplates { get; set; }
    public DbSet<CreatureLootTemplate> CreatureLootTemplates { get; set; }
    public DbSet<CreatureModelInfo> CreatureModelInfos { get; set; }
    public DbSet<CreatureModelRace> CreatureModelRaces { get; set; }
    public DbSet<CreatureMovement> CreatureMovements { get; set; }
    public DbSet<CreatureMovementTemplate> CreatureMovementTemplates { get; set; }
    public DbSet<CreatureOnkillReputation> CreatureOnkillReputations { get; set; }
    public DbSet<CreatureQuestrelation> CreatureQuestrelations { get; set; }
    public DbSet<CreatureSpawnData> CreatureSpawnDatas { get; set; }
    public DbSet<CreatureSpawnDataTemplate> CreatureSpawnDataTemplates { get; set; }
    public DbSet<CreatureSpawnEntry> CreatureSpawnEntries { get; set; }
    public DbSet<CreatureSpellList> CreatureSpellLists { get; set; }
    public DbSet<CreatureSpellListEntry> CreatureSpellListEntries { get; set; }
    public DbSet<CreatureSpellTargeting> CreatureSpellTargetings { get; set; }
    public DbSet<CreatureTemplate> CreatureTemplates { get; set; }
    public DbSet<CreatureTemplateAddon> CreatureTemplateAddons { get; set; }
    public DbSet<CreatureTemplateArmor> CreatureTemplateArmors { get; set; }
    public DbSet<CreatureTemplateClasslevelstats> CreatureTemplateClasslevelstats { get; set; }
    public DbSet<CreatureTemplateSpells> CreatureTemplateSpells { get; set; }
    public DbSet<CustomTexts> CustomTexts { get; set; }
    public DbSet<DbscriptRandomTemplates> DbscriptRandomTemplates { get; set; }
    public DbSet<DbscriptString> DbscriptStrings { get; set; }
    public DbSet<DbscriptStringTemplate> DbscriptStringTemplates { get; set; }
    public DbSet<DbscriptsOnCreatureDeath> DbscriptsOnCreatureDeaths { get; set; }
    public DbSet<DbscriptsOnCreatureMovement> DbscriptsOnCreatureMovements { get; set; }
    public DbSet<DbscriptsOnEvent> DbscriptsOnEvents { get; set; }
    public DbSet<DbscriptsOnGoTemplateUse> DbscriptsOnGoTemplateUses { get; set; }
    public DbSet<DbscriptsOnGoUse> DbscriptsOnGoUses { get; set; }
    public DbSet<DbscriptsOnGossip> DbscriptsOnGossips { get; set; }
    public DbSet<DbscriptsOnQuestEnd> DbscriptsOnQuestEnds { get; set; }
    public DbSet<DbscriptsOnQuestStart> DbscriptsOnQuestStarts { get; set; }
    public DbSet<DbscriptsOnRelay> DbscriptsOnRelaies { get; set; }
    public DbSet<DbscriptsOnSpell> DbscriptsOnSpells { get; set; }
    public DbSet<DisenchantLootTemplate> DisenchantLootTemplates { get; set; }
    public DbSet<ExplorationBasexp> ExplorationBasexps { get; set; }
    public DbSet<FishingLootTemplate> FishingLootTemplates { get; set; }
    public DbSet<GameEvent> GameEvents { get; set; }
    public DbSet<GameEventCreature> GameEventCreatures { get; set; }
    public DbSet<GameEventCreatureData> GameEventCreatureDatas { get; set; }
    public DbSet<GameEventGameobject> GameEventGameobjects { get; set; }
    public DbSet<GameEventMail> GameEventMails { get; set; }
    public DbSet<GameEventQuest> GameEventQuests { get; set; }
    public DbSet<GameEventTime> GameEventTimes { get; set; }
    public DbSet<GameGraveyardZone> GameGraveyardZones { get; set; }
    public DbSet<GameTele> GameTeles { get; set; }
    public DbSet<GameWeather> GameWeathers { get; set; }
    public DbSet<Gameobject> Gameobjects { get; set; }
    public DbSet<GameobjectAddon> GameobjectAddons { get; set; }
    public DbSet<GameobjectBattleground> GameobjectBattlegrounds { get; set; }
    public DbSet<GameobjectInvolvedrelation> GameobjectInvolvedrelations { get; set; }
    public DbSet<GameobjectLootTemplate> GameobjectLootTemplates { get; set; }
    public DbSet<GameobjectQuestrelation> GameobjectQuestrelations { get; set; }
    public DbSet<GameobjectSpawnEntry> GameobjectSpawnEntries { get; set; }
    public DbSet<GameobjectTemplate> GameobjectTemplates { get; set; }
    public DbSet<GossipMenu> GossipMenus { get; set; }
    public DbSet<GossipMenuOption> GossipMenuOptions { get; set; }
    public DbSet<GossipTexts> GossipTexts { get; set; }
    public DbSet<InstanceDungeonEncounters> InstanceDungeonEncounters { get; set; }
    public DbSet<InstanceEncounters> InstanceEncounters { get; set; }
    public DbSet<InstanceTemplate> InstanceTemplates { get; set; }
    public DbSet<ItemConvert> ItemConverts { get; set; }
    public DbSet<ItemEnchantmentTemplate> ItemEnchantmentTemplates { get; set; }
    public DbSet<ItemExpireConvert> ItemExpireConverts { get; set; }
    public DbSet<ItemLootTemplate> ItemLootTemplates { get; set; }
    public DbSet<ItemRequiredTarget> ItemRequiredTargets { get; set; }
    public DbSet<ItemTemplate> ItemTemplates { get; set; }
    public DbSet<LocalesAreatriggerTeleport> LocalesAreatriggerTeleports { get; set; }
    public DbSet<LocalesCreature> LocalesCreatures { get; set; }
    public DbSet<LocalesGameobject> LocalesGameobjects { get; set; }
    public DbSet<LocalesGossipMenuOption> LocalesGossipMenuOptions { get; set; }
    public DbSet<LocalesItem> LocalesItems { get; set; }
    public DbSet<LocalesNpcText> LocalesNpcTexts { get; set; }
    public DbSet<LocalesPageText> LocalesPageTexts { get; set; }
    public DbSet<LocalesPointsOfInterest> LocalesPointsOfInterests { get; set; }
    public DbSet<LocalesQuest> LocalesQuests { get; set; }
    public DbSet<LocalesQuestgiverGreeting> LocalesQuestgiverGreetings { get; set; }
    public DbSet<LocalesTrainerGreeting> LocalesTrainerGreetings { get; set; }
    public DbSet<MailLevelReward> MailLevelRewards { get; set; }
    public DbSet<MailLootTemplate> MailLootTemplates { get; set; }
    public DbSet<MangosString> MangosStrings { get; set; }
    public DbSet<NpcGossip> NpcGossips { get; set; }
    public DbSet<NpcSpellclickSpells> NpcSpellclickSpells { get; set; }
    public DbSet<NpcText> NpcTexts { get; set; }
    public DbSet<NpcTextBroadcastText> NpcTextBroadcastTexts { get; set; }
    public DbSet<NpcTrainer> NpcTrainers { get; set; }
    public DbSet<NpcTrainerTemplate> NpcTrainerTemplates { get; set; }
    public DbSet<NpcVendor> NpcVendors { get; set; }
    public DbSet<NpcVendorTemplate> NpcVendorTemplates { get; set; }
    public DbSet<PageText> PageTexts { get; set; }
    public DbSet<PetFamilystats> PetFamilystats { get; set; }
    public DbSet<PetLevelstats> PetLevelstats { get; set; }
    public DbSet<PetLevelstatsCopy> PetLevelstatsCopies { get; set; }
    public DbSet<PetNameGeneration> PetNameGenerations { get; set; }
    public DbSet<PetcreateinfoSpell> PetcreateinfoSpells { get; set; }
    public DbSet<PickpocketingLootTemplate> PickpocketingLootTemplates { get; set; }
    public DbSet<PlayerClasslevelstats> PlayerClasslevelstats { get; set; }
    public DbSet<PlayerLevelstats> PlayerLevelstats { get; set; }
    public DbSet<PlayerXpForLevel> PlayerXpForLevels { get; set; }
    public DbSet<Playercreateinfo> Playercreateinfos { get; set; }
    public DbSet<PlayercreateinfoAction> PlayercreateinfoActions { get; set; }
    public DbSet<PlayercreateinfoItem> PlayercreateinfoItems { get; set; }
    public DbSet<PlayercreateinfoSkills> PlayercreateinfoSkills { get; set; }
    public DbSet<PlayercreateinfoSpell> PlayercreateinfoSpells { get; set; }
    public DbSet<PointsOfInterest> PointsOfInterests { get; set; }
    public DbSet<PoolCreature> PoolCreatures { get; set; }
    public DbSet<PoolCreatureTemplate> PoolCreatureTemplates { get; set; }
    public DbSet<PoolGameobject> PoolGameobjects { get; set; }
    public DbSet<PoolGameobjectTemplate> PoolGameobjectTemplates { get; set; }
    public DbSet<PoolPool> PoolPools { get; set; }
    public DbSet<PoolTemplate> PoolTemplates { get; set; }
    public DbSet<ProspectingLootTemplate> ProspectingLootTemplates { get; set; }
    public DbSet<QuestPoi> QuestPois { get; set; }
    public DbSet<QuestPoiPoints> QuestPoiPoints { get; set; }
    public DbSet<QuestTemplate> QuestTemplates { get; set; }
    public DbSet<QuestgiverGreeting> QuestgiverGreetings { get; set; }
    public DbSet<ReferenceLootTemplate> ReferenceLootTemplates { get; set; }
    public DbSet<ReferenceLootTemplateNames> ReferenceLootTemplateNames { get; set; }
    public DbSet<ReputationRewardRate> ReputationRewardRates { get; set; }
    public DbSet<ReputationSpilloverTemplate> ReputationSpilloverTemplates { get; set; }
    public DbSet<ReservedName> ReservedNames { get; set; }
    public DbSet<ScriptTexts> ScriptTexts { get; set; }
    public DbSet<ScriptWaypoint> ScriptWaypoints { get; set; }
    public DbSet<ScriptedAreatrigger> ScriptedAreatriggers { get; set; }
    public DbSet<ScriptedEventId> ScriptedEventIds { get; set; }
    public DbSet<SkillDiscoveryTemplate> SkillDiscoveryTemplates { get; set; }
    public DbSet<SkillExtraItemTemplate> SkillExtraItemTemplates { get; set; }
    public DbSet<SkillFishingBaseLevel> SkillFishingBaseLevels { get; set; }
    public DbSet<SkinningLootTemplate> SkinningLootTemplates { get; set; }
    public DbSet<SpamRecords> SpamRecords { get; set; }
    public DbSet<SpawnGroup> SpawnGroups { get; set; }
    public DbSet<SpawnGroupEntry> SpawnGroupEntries { get; set; }
    public DbSet<SpawnGroupFormation> SpawnGroupFormations { get; set; }
    public DbSet<SpawnGroupLinkedGroup> SpawnGroupLinkedGroups { get; set; }
    public DbSet<SpawnGroupSpawn> SpawnGroupSpawns { get; set; }
    public DbSet<SpellAffect> SpellAffects { get; set; }
    public DbSet<SpellArea> SpellAreas { get; set; }
    public DbSet<SpellBonusData> SpellBonusDatas { get; set; }
    public DbSet<SpellChain> SpellChains { get; set; }
    public DbSet<SpellCone> SpellCones { get; set; }
    public DbSet<SpellElixir> SpellElixirs { get; set; }
    public DbSet<SpellFacing> SpellFacings { get; set; }
    public DbSet<SpellLearnSpell> SpellLearnSpells { get; set; }
    public DbSet<SpellLootTemplate> SpellLootTemplates { get; set; }
    public DbSet<SpellPetAuras> SpellPetAuras { get; set; }
    public DbSet<SpellProcEvent> SpellProcEvents { get; set; }
    public DbSet<SpellProcItemEnchant> SpellProcItemEnchants { get; set; }
    public DbSet<SpellScriptTarget> SpellScriptTargets { get; set; }
    public DbSet<SpellScripts> SpellScripts { get; set; }
    public DbSet<SpellTargetPosition> SpellTargetPositions { get; set; }
    public DbSet<SpellTemplate> SpellTemplates { get; set; }
    public DbSet<SpellThreat> SpellThreats { get; set; }
    public DbSet<TaxiShortcuts> TaxiShortcuts { get; set; }
    public DbSet<TrainerGreeting> TrainerGreetings { get; set; }
    public DbSet<Transports> Transports { get; set; }
    public DbSet<VehicleAccessory> VehicleAccessories { get; set; }
    public DbSet<WardenScans> WardenScans { get; set; }
    public DbSet<WaypointPath> WaypointPaths { get; set; }
    public DbSet<WorldSafeLocs> WorldSafeLocs { get; set; }
    public DbSet<WorldTemplate> WorldTemplates { get; set; }
}
