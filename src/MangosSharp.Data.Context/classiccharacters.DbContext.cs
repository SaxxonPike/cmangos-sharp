/* THIS FILE IS AUTOMATICALLY GENERATED */

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using MangosSharp.Data.Entities.CharacterDatabase;
using Microsoft.EntityFrameworkCore;

// ReSharper disable All

namespace MangosSharp.Data.Context;

public sealed class ClassiccharactersDbContext : DbContext
{
    public ClassiccharactersDbContext() {}
    public ClassiccharactersDbContext(DbContextOptions options) : base(options) {}
    protected override void OnModelCreating(ModelBuilder builder)
    {
        builder.Entity<AccountInstancesEntered>().HasKey(e => new { e.AccountId, e.InstanceId });
        builder.Entity<AhbotItems>().HasKey(e => new { e.AddChance, e.Item });
        builder.Entity<Auction>().HasKey(e => new { e.Id });
        builder.Entity<Bugreport>().HasKey(e => new { e.Id });
        builder.Entity<CharacterAction>().HasKey(e => new { e.Action, e.Button, e.Guid });
        builder.Entity<CharacterAura>().HasKey(e => new { e.Basepoints0, e.CasterGuid, e.Guid, e.ItemGuid, e.Spell });
        builder.Entity<CharacterBattlegroundData>().HasKey(e => new { e.Guid });
        builder.Entity<CharacterGifts>().HasKey(e => new { e.Entry, e.ItemGuid });
        builder.Entity<CharacterHomebind>().HasKey(e => new { e.Guid });
        builder.Entity<CharacterHonorCp>().HasKey(e => new { e.Date });
        builder.Entity<CharacterInstance>().HasKey(e => new { e.Guid, e.Instance });
        builder.Entity<CharacterInventory>().HasKey(e => new { e.Bag, e.Item });
        builder.Entity<CharacterPet>().HasKey(e => new { e.Id });
        builder.Entity<CharacterQueststatus>().HasKey(e => new { e.Explored, e.Guid, e.Quest });
        builder.Entity<CharacterQueststatusWeekly>().HasKey(e => new { e.Guid, e.Quest });
        builder.Entity<CharacterReputation>().HasKey(e => new { e.Faction, e.Guid });
        builder.Entity<CharacterSkills>().HasKey(e => new { e.Guid, e.Skill });
        builder.Entity<CharacterSocial>().HasKey(e => new { e.Flags, e.Friend, e.Guid });
        builder.Entity<CharacterSpell>().HasKey(e => new { e.Active, e.Guid, e.Spell });
        builder.Entity<CharacterSpellCooldown>().HasKey(e => new { e.Category, e.Guid, e.SpellId });
        builder.Entity<CharacterStats>().HasKey(e => new { e.Agility, e.Guid });
        builder.Entity<CharacterTutorial>().HasKey(e => new { e.Account });
        builder.Entity<Characters>().HasKey(e => new { e.Account, e.Guid });
        builder.Entity<Corpse>().HasKey(e => new { e.CorpseType, e.Guid });
        builder.Entity<CreatureRespawn>().HasKey(e => new { e.Guid, e.Instance });
        builder.Entity<GameEventStatus>().HasKey(e => new { e.Event });
        builder.Entity<GameobjectRespawn>().HasKey(e => new { e.Guid, e.Instance });
        builder.Entity<GmSurveys>().HasKey(e => new { e.Answer1, e.Ticketid });
        builder.Entity<GmTickets>().HasKey(e => new { e.Id });
        builder.Entity<GroupInstance>().HasKey(e => new { e.Instance, e.LeaderGuid });
        builder.Entity<GroupMember>().HasKey(e => new { e.Assistant, e.GroupId, e.MemberGuid });
        builder.Entity<Groups>().HasKey(e => new { e.GroupId });
        builder.Entity<Guild>().HasKey(e => new { e.BackgroundColor, e.Guildid });
        builder.Entity<GuildEventlog>().HasKey(e => new { e.EventType, e.Guildid, e.LogGuid });
        builder.Entity<GuildMember>().HasKey(e => new { e.Guid });
        builder.Entity<GuildRank>().HasKey(e => new { e.Guildid, e.Rid });
        builder.Entity<Instance>().HasKey(e => new { e.Id });
        builder.Entity<InstanceReset>().HasKey(e => new { e.Mapid });
        builder.Entity<ItemInstance>().HasKey(e => new { e.Charges, e.Guid });
        builder.Entity<ItemLoot>().HasKey(e => new { e.Amount, e.Guid, e.Itemid });
        builder.Entity<ItemText>().HasKey(e => new { e.Id });
        builder.Entity<Mail>().HasKey(e => new { e.Id });
        builder.Entity<MailItems>().HasKey(e => new { e.ItemGuid, e.MailId });
        builder.Entity<PetAura>().HasKey(e => new { e.Basepoints0, e.CasterGuid, e.Guid, e.ItemGuid, e.Spell });
        builder.Entity<PetSpell>().HasKey(e => new { e.Active, e.Guid, e.Spell });
        builder.Entity<PetSpellCooldown>().HasKey(e => new { e.Guid, e.Spell });
        builder.Entity<Petition>().HasKey(e => new { e.Name, e.Ownerguid });
        builder.Entity<PetitionSign>().HasKey(e => new { e.Ownerguid, e.Petitionguid, e.Playerguid });
        builder.Entity<PlayerbotSavedData>().HasKey(e => new { e.CombatDelay, e.Guid });
        builder.Entity<PvpstatsBattlegrounds>().HasKey(e => new { e.Id });
        builder.Entity<PvpstatsPlayers>().HasKey(e => new { e.Attr1, e.BattlegroundId, e.CharacterGuid });
        builder.Entity<SavedVariables>().HasKey(e => new { e.CleaningFlags });
        builder.Entity<World>().HasKey(e => new { e.Data, e.Map });
        builder.Entity<WorldState>().HasKey(e => new { e.Id });
        builder.Entity<AhbotItems>().Property(e => e.AddChance).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.Item).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.MaxAmount).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.MinAmount).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.Value).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Buyguid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Buyoutprice).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Deposit).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Houseid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.ItemCount).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.ItemRandompropertyid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.ItemTemplate).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Itemguid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Itemowner).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Lastbid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Startbid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Time).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Action).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Button).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Type).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints0).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints1).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints2).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.CasterGuid).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.EffIndexMask).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Maxduration).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime0).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime1).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime2).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Remaincharges).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Remaintime).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Stackcount).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.InstanceId).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinMap).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinO).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinX).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinY).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinZ).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Team).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.Entry).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionX).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionY).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionZ).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.Zone).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Date).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Honor).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Type).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Victim).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.VictimType).HasDefaultValue();
        builder.Entity<CharacterInstance>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterInstance>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<CharacterInstance>().Property(e => e.Permanent).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Bag).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Item).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.ItemTemplate).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Slot).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.CreatedBySpell).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Curhappiness).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Curhealth).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Curmana).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Entry).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Exp).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Level).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Loyalty).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Loyaltypoints).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Modelid).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Owner).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.PetType).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Reactstate).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Renamed).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsCost).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsTime).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Savetime).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Slot).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Trainpoint).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.XpForNextLoyalty).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Explored).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount1).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount2).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount3).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount4).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount1).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount2).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount3).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount4).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Quest).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Rewarded).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Status).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Timer).HasDefaultValue();
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Quest).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Faction).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Standing).HasDefaultValue();
        builder.Entity<CharacterSocial>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<CharacterSocial>().Property(e => e.Friend).HasDefaultValue();
        builder.Entity<CharacterSocial>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Active).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Disabled).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Category).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.CategoryExpireTime).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.ItemId).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellExpireTime).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellId).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Agility).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Armor).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.AttackPower).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.BlockPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.CritPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.DodgePct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Intellect).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxhealth).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower1).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower2).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower3).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower4).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower5).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower6).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower7).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ParryPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.RangedAttackPower).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.RangedCritPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResArcane).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResFire).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResFrost).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResHoly).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResNature).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResShadow).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Spirit).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Stamina).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Strength).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut0).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut1).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut2).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut3).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut4).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut5).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut6).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut7).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Account).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ActionBars).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.AmmoId).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.AtLogin).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Cinematic).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Class).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.DeathExpireTime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Drunk).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ExtraFlags).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Gender).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.GrantableLevels).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Health).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.HonorHighestRank).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.HonorStanding).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.IsLogoutResting).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Level).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Leveltime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.LogoutTime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Money).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Online).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Orientation).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PlayerBytes).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PlayerBytes2).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PlayerFlags).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PositionX).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PositionY).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PositionZ).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power1).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power2).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power3).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power4).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power5).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Race).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ResettalentsCost).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ResettalentsTime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.RestBonus).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StableSlots).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StoredDishonorableKills).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StoredHonorRating).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StoredHonorableKills).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Totaltime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransO).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransX).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransY).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransZ).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Transguid).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.WatchedFaction).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Xp).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Zone).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.CorpseType).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Orientation).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Player).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.PositionX).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.PositionY).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.PositionZ).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Time).HasDefaultValue();
        builder.Entity<CreatureRespawn>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CreatureRespawn>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<CreatureRespawn>().Property(e => e.Respawntime).HasDefaultValue();
        builder.Entity<GameEventStatus>().Property(e => e.Event).HasDefaultValue();
        builder.Entity<GameobjectRespawn>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<GameobjectRespawn>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<GameobjectRespawn>().Property(e => e.Respawntime).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Answered).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.AssigneeGuid).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.AssigneeName).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Category).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Closed).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Conclusion).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Level).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Locale).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Mapid).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Notes).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.O).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Seen).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.State).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Status).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Updated).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.X).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Y).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Z).HasDefaultValue();
        builder.Entity<GroupInstance>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<GroupInstance>().Property(e => e.LeaderGuid).HasDefaultValue();
        builder.Entity<GroupInstance>().Property(e => e.Permanent).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.BackgroundColor).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.BorderColor).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.BorderStyle).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Createdate).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.EmblemColor).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.EmblemStyle).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Guildid).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Info).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Leaderguid).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Motd).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Guildid).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Offnote).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Pnote).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Rank).HasDefaultValue();
        builder.Entity<GuildRank>().Property(e => e.Guildid).HasDefaultValue();
        builder.Entity<GuildRank>().Property(e => e.Rights).HasDefaultValue();
        builder.Entity<GuildRank>().Property(e => e.Rname).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.EncountersMask).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.Resettime).HasDefaultValue();
        builder.Entity<InstanceReset>().Property(e => e.Mapid).HasDefaultValue();
        builder.Entity<InstanceReset>().Property(e => e.Resettime).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Count).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.CreatorGuid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Durability).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Duration).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.GiftCreatorGuid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.ItemEntry).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.ItemTextId).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.OwnerGuid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.RandomPropertyId).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Amount).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Itemid).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.OwnerGuid).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Property).HasDefaultValue();
        builder.Entity<ItemText>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Checked).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Cod).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.DeliverTime).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.ExpireTime).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.HasItems).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.ItemTextId).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.MailTemplateId).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.MessageType).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Money).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Receiver).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Sender).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Stationery).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.ItemTemplate).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.MailId).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.Receiver).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Basepoints0).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Basepoints1).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Basepoints2).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.CasterGuid).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.EffIndexMask).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Maxduration).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Periodictime0).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Periodictime1).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Periodictime2).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Remaincharges).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Remaintime).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Stackcount).HasDefaultValue();
        builder.Entity<PetSpell>().Property(e => e.Active).HasDefaultValue();
        builder.Entity<PetSpell>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PetSpell>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<PetSpellCooldown>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PetSpellCooldown>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<PetSpellCooldown>().Property(e => e.Time).HasDefaultValue();
        builder.Entity<Petition>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<Petition>().Property(e => e.Petitionguid).HasDefaultValue();
        builder.Entity<PetitionSign>().Property(e => e.Petitionguid).HasDefaultValue();
        builder.Entity<PetitionSign>().Property(e => e.PlayerAccount).HasDefaultValue();
        builder.Entity<PetitionSign>().Property(e => e.Playerguid).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatDelay).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatOrder).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Pname).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.PrimaryTarget).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.SecondaryTarget).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Sname).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr1).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr2).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr3).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr4).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr5).HasDefaultValue();
        builder.Entity<SavedVariables>().Property(e => e.CleaningFlags).HasDefaultValue();
        builder.Entity<SavedVariables>().Property(e => e.NextMaintenanceDate).HasDefaultValue();
        builder.Entity<SavedVariables>().Property(e => e.NextWeeklyQuestResetTime).HasDefaultValue();
        builder.Entity<World>().Property(e => e.Map).HasDefaultValue();
    }

    public DbSet<AccountInstancesEntered> AccountInstancesEntereds { get; set; }
    public DbSet<AhbotItems> AhbotItems { get; set; }
    public DbSet<Auction> Auctions { get; set; }
    public DbSet<Bugreport> Bugreports { get; set; }
    public DbSet<CharacterAction> CharacterActions { get; set; }
    public DbSet<CharacterAura> CharacterAuras { get; set; }
    public DbSet<CharacterBattlegroundData> CharacterBattlegroundDatas { get; set; }
    public DbSet<CharacterGifts> CharacterGifts { get; set; }
    public DbSet<CharacterHomebind> CharacterHomebinds { get; set; }
    public DbSet<CharacterHonorCp> CharacterHonorCps { get; set; }
    public DbSet<CharacterInstance> CharacterInstances { get; set; }
    public DbSet<CharacterInventory> CharacterInventories { get; set; }
    public DbSet<CharacterPet> CharacterPets { get; set; }
    public DbSet<CharacterQueststatus> CharacterQueststatus { get; set; }
    public DbSet<CharacterQueststatusWeekly> CharacterQueststatusWeeklies { get; set; }
    public DbSet<CharacterReputation> CharacterReputations { get; set; }
    public DbSet<CharacterSkills> CharacterSkills { get; set; }
    public DbSet<CharacterSocial> CharacterSocials { get; set; }
    public DbSet<CharacterSpell> CharacterSpells { get; set; }
    public DbSet<CharacterSpellCooldown> CharacterSpellCooldowns { get; set; }
    public DbSet<CharacterStats> CharacterStats { get; set; }
    public DbSet<CharacterTutorial> CharacterTutorials { get; set; }
    public DbSet<Characters> Characters { get; set; }
    public DbSet<Corpse> Corpses { get; set; }
    public DbSet<CreatureRespawn> CreatureRespawns { get; set; }
    public DbSet<GameEventStatus> GameEventStatus { get; set; }
    public DbSet<GameobjectRespawn> GameobjectRespawns { get; set; }
    public DbSet<GmSurveys> GmSurveys { get; set; }
    public DbSet<GmTickets> GmTickets { get; set; }
    public DbSet<GroupInstance> GroupInstances { get; set; }
    public DbSet<GroupMember> GroupMembers { get; set; }
    public DbSet<Groups> Groups { get; set; }
    public DbSet<Guild> Guilds { get; set; }
    public DbSet<GuildEventlog> GuildEventlogs { get; set; }
    public DbSet<GuildMember> GuildMembers { get; set; }
    public DbSet<GuildRank> GuildRanks { get; set; }
    public DbSet<Instance> Instances { get; set; }
    public DbSet<InstanceReset> InstanceResets { get; set; }
    public DbSet<ItemInstance> ItemInstances { get; set; }
    public DbSet<ItemLoot> ItemLoots { get; set; }
    public DbSet<ItemText> ItemTexts { get; set; }
    public DbSet<Mail> Mails { get; set; }
    public DbSet<MailItems> MailItems { get; set; }
    public DbSet<PetAura> PetAuras { get; set; }
    public DbSet<PetSpell> PetSpells { get; set; }
    public DbSet<PetSpellCooldown> PetSpellCooldowns { get; set; }
    public DbSet<Petition> Petitions { get; set; }
    public DbSet<PetitionSign> PetitionSigns { get; set; }
    public DbSet<PlayerbotSavedData> PlayerbotSavedDatas { get; set; }
    public DbSet<PvpstatsBattlegrounds> PvpstatsBattlegrounds { get; set; }
    public DbSet<PvpstatsPlayers> PvpstatsPlayers { get; set; }
    public DbSet<SavedVariables> SavedVariables { get; set; }
    public DbSet<World> Worlds { get; set; }
    public DbSet<WorldState> WorldStates { get; set; }
}
