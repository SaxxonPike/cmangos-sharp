/* THIS FILE IS AUTOMATICALLY GENERATED */

using MangosSharp.Data.Entities.CharacterDatabase;
using Microsoft.EntityFrameworkCore;

// ReSharper disable All

namespace MangosSharp.Data.Context;

public sealed class ClassiccharactersDbContext : DbContext
{
    public ClassiccharactersDbContext() {}
    public ClassiccharactersDbContext(DbContextOptions options) : base(options) {}
    protected override void OnModelCreating(ModelBuilder builder)
    {
        builder.Entity<AccountInstancesEntered>().HasKey(e => new { e.AccountId, e.InstanceId });
        builder.Entity<AccountInstancesEntered>().ToTable("account_instances_entered");
        builder.Entity<AhbotItems>().HasKey(e => new { e.AddChance, e.Item });
        builder.Entity<AhbotItems>().ToTable("ahbot_items");
        builder.Entity<Auction>().HasKey(e => new { e.Id });
        builder.Entity<Auction>().ToTable("auction");
        builder.Entity<Bugreport>().HasKey(e => new { e.Id });
        builder.Entity<Bugreport>().ToTable("bugreport");
        builder.Entity<CharacterAction>().HasKey(e => new { e.Action, e.Button, e.Guid });
        builder.Entity<CharacterAction>().ToTable("character_action");
        builder.Entity<CharacterAura>().HasKey(e => new { e.Basepoints0, e.CasterGuid, e.Guid, e.ItemGuid, e.Spell });
        builder.Entity<CharacterAura>().ToTable("character_aura");
        builder.Entity<CharacterBattlegroundData>().HasKey(e => new { e.Guid });
        builder.Entity<CharacterBattlegroundData>().ToTable("character_battleground_data");
        builder.Entity<CharacterGifts>().HasKey(e => new { e.Entry, e.ItemGuid });
        builder.Entity<CharacterGifts>().ToTable("character_gifts");
        builder.Entity<CharacterHomebind>().HasKey(e => new { e.Guid });
        builder.Entity<CharacterHomebind>().ToTable("character_homebind");
        builder.Entity<CharacterHonorCp>().HasKey(e => new { e.Date });
        builder.Entity<CharacterHonorCp>().ToTable("character_honor_cp");
        builder.Entity<CharacterInstance>().HasKey(e => new { e.Guid, e.Instance });
        builder.Entity<CharacterInstance>().ToTable("character_instance");
        builder.Entity<CharacterInventory>().HasKey(e => new { e.Bag, e.Item });
        builder.Entity<CharacterInventory>().ToTable("character_inventory");
        builder.Entity<CharacterPet>().HasKey(e => new { e.Id });
        builder.Entity<CharacterPet>().ToTable("character_pet");
        builder.Entity<CharacterQueststatus>().HasKey(e => new { e.Explored, e.Guid, e.Quest });
        builder.Entity<CharacterQueststatus>().ToTable("character_queststatus");
        builder.Entity<CharacterQueststatusWeekly>().HasKey(e => new { e.Guid, e.Quest });
        builder.Entity<CharacterQueststatusWeekly>().ToTable("character_queststatus_weekly");
        builder.Entity<CharacterReputation>().HasKey(e => new { e.Faction, e.Guid });
        builder.Entity<CharacterReputation>().ToTable("character_reputation");
        builder.Entity<CharacterSkills>().HasKey(e => new { e.Guid, e.Skill });
        builder.Entity<CharacterSkills>().ToTable("character_skills");
        builder.Entity<CharacterSocial>().HasKey(e => new { e.Flags, e.Friend, e.Guid });
        builder.Entity<CharacterSocial>().ToTable("character_social");
        builder.Entity<CharacterSpell>().HasKey(e => new { e.Active, e.Guid, e.Spell });
        builder.Entity<CharacterSpell>().ToTable("character_spell");
        builder.Entity<CharacterSpellCooldown>().HasKey(e => new { e.Category, e.Guid, e.SpellId });
        builder.Entity<CharacterSpellCooldown>().ToTable("character_spell_cooldown");
        builder.Entity<CharacterStats>().HasKey(e => new { e.Agility, e.Guid });
        builder.Entity<CharacterStats>().ToTable("character_stats");
        builder.Entity<CharacterTutorial>().HasKey(e => new { e.Account });
        builder.Entity<CharacterTutorial>().ToTable("character_tutorial");
        builder.Entity<Characters>().HasKey(e => new { e.Account, e.Guid });
        builder.Entity<Characters>().ToTable("characters");
        builder.Entity<Corpse>().HasKey(e => new { e.CorpseType, e.Guid });
        builder.Entity<Corpse>().ToTable("corpse");
        builder.Entity<CreatureRespawn>().HasKey(e => new { e.Guid, e.Instance });
        builder.Entity<CreatureRespawn>().ToTable("creature_respawn");
        builder.Entity<GameEventStatus>().HasKey(e => new { e.Event });
        builder.Entity<GameEventStatus>().ToTable("game_event_status");
        builder.Entity<GameobjectRespawn>().HasKey(e => new { e.Guid, e.Instance });
        builder.Entity<GameobjectRespawn>().ToTable("gameobject_respawn");
        builder.Entity<GmSurveys>().HasKey(e => new { e.Answer1, e.Ticketid });
        builder.Entity<GmSurveys>().ToTable("gm_surveys");
        builder.Entity<GmTickets>().HasKey(e => new { e.Id });
        builder.Entity<GmTickets>().ToTable("gm_tickets");
        builder.Entity<GroupInstance>().HasKey(e => new { e.Instance, e.LeaderGuid });
        builder.Entity<GroupInstance>().ToTable("group_instance");
        builder.Entity<GroupMember>().HasKey(e => new { e.Assistant, e.GroupId, e.MemberGuid });
        builder.Entity<GroupMember>().ToTable("group_member");
        builder.Entity<Groups>().HasKey(e => new { e.GroupId });
        builder.Entity<Groups>().ToTable("groups");
        builder.Entity<Guild>().HasKey(e => new { e.BackgroundColor, e.Guildid });
        builder.Entity<Guild>().ToTable("guild");
        builder.Entity<GuildEventlog>().HasKey(e => new { e.EventType, e.Guildid, e.LogGuid });
        builder.Entity<GuildEventlog>().ToTable("guild_eventlog");
        builder.Entity<GuildMember>().HasKey(e => new { e.Guid });
        builder.Entity<GuildMember>().ToTable("guild_member");
        builder.Entity<GuildRank>().HasKey(e => new { e.Guildid, e.Rid });
        builder.Entity<GuildRank>().ToTable("guild_rank");
        builder.Entity<Instance>().HasKey(e => new { e.Id });
        builder.Entity<Instance>().ToTable("instance");
        builder.Entity<InstanceReset>().HasKey(e => new { e.Mapid });
        builder.Entity<InstanceReset>().ToTable("instance_reset");
        builder.Entity<ItemInstance>().HasKey(e => new { e.Charges, e.Guid });
        builder.Entity<ItemInstance>().ToTable("item_instance");
        builder.Entity<ItemLoot>().HasKey(e => new { e.Amount, e.Guid, e.Itemid });
        builder.Entity<ItemLoot>().ToTable("item_loot");
        builder.Entity<ItemText>().HasKey(e => new { e.Id });
        builder.Entity<ItemText>().ToTable("item_text");
        builder.Entity<Mail>().HasKey(e => new { e.Id });
        builder.Entity<Mail>().ToTable("mail");
        builder.Entity<MailItems>().HasKey(e => new { e.ItemGuid, e.MailId });
        builder.Entity<MailItems>().ToTable("mail_items");
        builder.Entity<PetAura>().HasKey(e => new { e.Basepoints0, e.CasterGuid, e.Guid, e.ItemGuid, e.Spell });
        builder.Entity<PetAura>().ToTable("pet_aura");
        builder.Entity<PetSpell>().HasKey(e => new { e.Active, e.Guid, e.Spell });
        builder.Entity<PetSpell>().ToTable("pet_spell");
        builder.Entity<PetSpellCooldown>().HasKey(e => new { e.Guid, e.Spell });
        builder.Entity<PetSpellCooldown>().ToTable("pet_spell_cooldown");
        builder.Entity<Petition>().HasKey(e => new { e.Name, e.Ownerguid });
        builder.Entity<Petition>().ToTable("petition");
        builder.Entity<PetitionSign>().HasKey(e => new { e.Ownerguid, e.Petitionguid, e.Playerguid });
        builder.Entity<PetitionSign>().ToTable("petition_sign");
        builder.Entity<PlayerbotSavedData>().HasKey(e => new { e.CombatDelay, e.Guid });
        builder.Entity<PlayerbotSavedData>().ToTable("playerbot_saved_data");
        builder.Entity<PvpstatsBattlegrounds>().HasKey(e => new { e.Id });
        builder.Entity<PvpstatsBattlegrounds>().ToTable("pvpstats_battlegrounds");
        builder.Entity<PvpstatsPlayers>().HasKey(e => new { e.Attr1, e.BattlegroundId, e.CharacterGuid });
        builder.Entity<PvpstatsPlayers>().ToTable("pvpstats_players");
        builder.Entity<SavedVariables>().HasKey(e => new { e.CleaningFlags });
        builder.Entity<SavedVariables>().ToTable("saved_variables");
        builder.Entity<World>().HasKey(e => new { e.Data, e.Map });
        builder.Entity<World>().ToTable("world");
        builder.Entity<WorldState>().HasKey(e => new { e.Id });
        builder.Entity<WorldState>().ToTable("world_state");
        builder.Entity<AccountInstancesEntered>().Property(e => e.AccountId).HasColumnName("AccountId");
        builder.Entity<AccountInstancesEntered>().Property(e => e.AccountId).HasColumnType("int unsigned");
        builder.Entity<AccountInstancesEntered>().Property(e => e.AccountId).IsRequired();
        builder.Entity<AccountInstancesEntered>().Property(e => e.ExpireTime).HasColumnName("ExpireTime");
        builder.Entity<AccountInstancesEntered>().Property(e => e.ExpireTime).HasColumnType("bigint");
        builder.Entity<AccountInstancesEntered>().Property(e => e.ExpireTime).IsRequired();
        builder.Entity<AccountInstancesEntered>().Property(e => e.InstanceId).HasColumnName("InstanceId");
        builder.Entity<AccountInstancesEntered>().Property(e => e.InstanceId).HasColumnType("int unsigned");
        builder.Entity<AccountInstancesEntered>().Property(e => e.InstanceId).IsRequired();
        builder.Entity<AhbotItems>().Property(e => e.AddChance).HasColumnName("add_chance");
        builder.Entity<AhbotItems>().Property(e => e.AddChance).HasColumnType("int unsigned");
        builder.Entity<AhbotItems>().Property(e => e.AddChance).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.AddChance).IsRequired();
        builder.Entity<AhbotItems>().Property(e => e.Item).HasColumnName("item");
        builder.Entity<AhbotItems>().Property(e => e.Item).HasColumnType("int unsigned");
        builder.Entity<AhbotItems>().Property(e => e.Item).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.Item).IsRequired();
        builder.Entity<AhbotItems>().Property(e => e.MaxAmount).HasColumnName("max_amount");
        builder.Entity<AhbotItems>().Property(e => e.MaxAmount).HasColumnType("int unsigned");
        builder.Entity<AhbotItems>().Property(e => e.MaxAmount).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.MaxAmount).IsRequired();
        builder.Entity<AhbotItems>().Property(e => e.MinAmount).HasColumnName("min_amount");
        builder.Entity<AhbotItems>().Property(e => e.MinAmount).HasColumnType("int unsigned");
        builder.Entity<AhbotItems>().Property(e => e.MinAmount).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.MinAmount).IsRequired();
        builder.Entity<AhbotItems>().Property(e => e.Value).HasColumnName("value");
        builder.Entity<AhbotItems>().Property(e => e.Value).HasColumnType("int unsigned");
        builder.Entity<AhbotItems>().Property(e => e.Value).HasDefaultValue();
        builder.Entity<AhbotItems>().Property(e => e.Value).IsRequired();
        builder.Entity<Auction>().Property(e => e.Buyguid).HasColumnName("buyguid");
        builder.Entity<Auction>().Property(e => e.Buyguid).HasColumnType("int unsigned");
        builder.Entity<Auction>().Property(e => e.Buyguid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Buyguid).IsRequired();
        builder.Entity<Auction>().Property(e => e.Buyoutprice).HasColumnName("buyoutprice");
        builder.Entity<Auction>().Property(e => e.Buyoutprice).HasColumnType("int");
        builder.Entity<Auction>().Property(e => e.Buyoutprice).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Buyoutprice).IsRequired();
        builder.Entity<Auction>().Property(e => e.Deposit).HasColumnName("deposit");
        builder.Entity<Auction>().Property(e => e.Deposit).HasColumnType("int");
        builder.Entity<Auction>().Property(e => e.Deposit).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Deposit).IsRequired();
        builder.Entity<Auction>().Property(e => e.Houseid).HasColumnName("houseid");
        builder.Entity<Auction>().Property(e => e.Houseid).HasColumnType("int unsigned");
        builder.Entity<Auction>().Property(e => e.Houseid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Houseid).IsRequired();
        builder.Entity<Auction>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<Auction>().Property(e => e.Id).HasColumnType("int unsigned");
        builder.Entity<Auction>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Id).IsRequired();
        builder.Entity<Auction>().Property(e => e.ItemCount).HasColumnName("item_count");
        builder.Entity<Auction>().Property(e => e.ItemCount).HasColumnType("int unsigned");
        builder.Entity<Auction>().Property(e => e.ItemCount).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.ItemCount).IsRequired();
        builder.Entity<Auction>().Property(e => e.ItemRandompropertyid).HasColumnName("item_randompropertyid");
        builder.Entity<Auction>().Property(e => e.ItemRandompropertyid).HasColumnType("int");
        builder.Entity<Auction>().Property(e => e.ItemRandompropertyid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.ItemRandompropertyid).IsRequired();
        builder.Entity<Auction>().Property(e => e.ItemTemplate).HasColumnName("item_template");
        builder.Entity<Auction>().Property(e => e.ItemTemplate).HasColumnType("int unsigned");
        builder.Entity<Auction>().Property(e => e.ItemTemplate).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.ItemTemplate).IsRequired();
        builder.Entity<Auction>().Property(e => e.Itemguid).HasColumnName("itemguid");
        builder.Entity<Auction>().Property(e => e.Itemguid).HasColumnType("int unsigned");
        builder.Entity<Auction>().Property(e => e.Itemguid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Itemguid).IsRequired();
        builder.Entity<Auction>().Property(e => e.Itemowner).HasColumnName("itemowner");
        builder.Entity<Auction>().Property(e => e.Itemowner).HasColumnType("int unsigned");
        builder.Entity<Auction>().Property(e => e.Itemowner).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Itemowner).IsRequired();
        builder.Entity<Auction>().Property(e => e.Lastbid).HasColumnName("lastbid");
        builder.Entity<Auction>().Property(e => e.Lastbid).HasColumnType("int");
        builder.Entity<Auction>().Property(e => e.Lastbid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Lastbid).IsRequired();
        builder.Entity<Auction>().Property(e => e.Startbid).HasColumnName("startbid");
        builder.Entity<Auction>().Property(e => e.Startbid).HasColumnType("int");
        builder.Entity<Auction>().Property(e => e.Startbid).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Startbid).IsRequired();
        builder.Entity<Auction>().Property(e => e.Time).HasColumnName("time");
        builder.Entity<Auction>().Property(e => e.Time).HasColumnType("bigint unsigned");
        builder.Entity<Auction>().Property(e => e.Time).HasDefaultValue();
        builder.Entity<Auction>().Property(e => e.Time).IsRequired();
        builder.Entity<Bugreport>().Property(e => e.Content).HasColumnName("content");
        builder.Entity<Bugreport>().Property(e => e.Content).HasColumnType("longtext");
        builder.Entity<Bugreport>().Property(e => e.Content).IsRequired();
        builder.Entity<Bugreport>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<Bugreport>().Property(e => e.Id).HasColumnType("int");
        builder.Entity<Bugreport>().Property(e => e.Id).IsRequired();
        builder.Entity<Bugreport>().Property(e => e.Type).HasColumnName("type");
        builder.Entity<Bugreport>().Property(e => e.Type).HasColumnType("longtext");
        builder.Entity<Bugreport>().Property(e => e.Type).IsRequired();
        builder.Entity<CharacterAction>().Property(e => e.Action).HasColumnName("action");
        builder.Entity<CharacterAction>().Property(e => e.Action).HasColumnType("int unsigned");
        builder.Entity<CharacterAction>().Property(e => e.Action).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Action).IsRequired();
        builder.Entity<CharacterAction>().Property(e => e.Button).HasColumnName("button");
        builder.Entity<CharacterAction>().Property(e => e.Button).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterAction>().Property(e => e.Button).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Button).IsRequired();
        builder.Entity<CharacterAction>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterAction>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterAction>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterAction>().Property(e => e.Type).HasColumnName("type");
        builder.Entity<CharacterAction>().Property(e => e.Type).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterAction>().Property(e => e.Type).HasDefaultValue();
        builder.Entity<CharacterAction>().Property(e => e.Type).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints0).HasColumnName("basepoints0");
        builder.Entity<CharacterAura>().Property(e => e.Basepoints0).HasColumnType("int");
        builder.Entity<CharacterAura>().Property(e => e.Basepoints0).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints0).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints1).HasColumnName("basepoints1");
        builder.Entity<CharacterAura>().Property(e => e.Basepoints1).HasColumnType("int");
        builder.Entity<CharacterAura>().Property(e => e.Basepoints1).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints1).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints2).HasColumnName("basepoints2");
        builder.Entity<CharacterAura>().Property(e => e.Basepoints2).HasColumnType("int");
        builder.Entity<CharacterAura>().Property(e => e.Basepoints2).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Basepoints2).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.CasterGuid).HasColumnName("caster_guid");
        builder.Entity<CharacterAura>().Property(e => e.CasterGuid).HasColumnType("bigint unsigned");
        builder.Entity<CharacterAura>().Property(e => e.CasterGuid).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.CasterGuid).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.EffIndexMask).HasColumnName("effIndexMask");
        builder.Entity<CharacterAura>().Property(e => e.EffIndexMask).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.EffIndexMask).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.EffIndexMask).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterAura>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.ItemGuid).HasColumnName("item_guid");
        builder.Entity<CharacterAura>().Property(e => e.ItemGuid).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.ItemGuid).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Maxduration).HasColumnName("maxduration");
        builder.Entity<CharacterAura>().Property(e => e.Maxduration).HasColumnType("int");
        builder.Entity<CharacterAura>().Property(e => e.Maxduration).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Maxduration).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime0).HasColumnName("periodictime0");
        builder.Entity<CharacterAura>().Property(e => e.Periodictime0).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.Periodictime0).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime0).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime1).HasColumnName("periodictime1");
        builder.Entity<CharacterAura>().Property(e => e.Periodictime1).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.Periodictime1).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime1).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime2).HasColumnName("periodictime2");
        builder.Entity<CharacterAura>().Property(e => e.Periodictime2).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.Periodictime2).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Periodictime2).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Remaincharges).HasColumnName("remaincharges");
        builder.Entity<CharacterAura>().Property(e => e.Remaincharges).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.Remaincharges).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Remaincharges).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Remaintime).HasColumnName("remaintime");
        builder.Entity<CharacterAura>().Property(e => e.Remaintime).HasColumnType("int");
        builder.Entity<CharacterAura>().Property(e => e.Remaintime).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Remaintime).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Spell).HasColumnName("spell");
        builder.Entity<CharacterAura>().Property(e => e.Spell).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Spell).IsRequired();
        builder.Entity<CharacterAura>().Property(e => e.Stackcount).HasColumnName("stackcount");
        builder.Entity<CharacterAura>().Property(e => e.Stackcount).HasColumnType("int unsigned");
        builder.Entity<CharacterAura>().Property(e => e.Stackcount).HasDefaultValue();
        builder.Entity<CharacterAura>().Property(e => e.Stackcount).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.InstanceId).HasColumnName("instance_id");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.InstanceId).HasColumnType("int unsigned");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.InstanceId).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.InstanceId).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinMap).HasColumnName("join_map");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinMap).HasColumnType("int");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinMap).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinMap).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinO).HasColumnName("join_o");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinO).HasColumnType("float");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinO).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinO).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinX).HasColumnName("join_x");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinX).HasColumnType("float");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinX).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinX).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinY).HasColumnName("join_y");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinY).HasColumnType("float");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinY).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinY).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinZ).HasColumnName("join_z");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinZ).HasColumnType("float");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinZ).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.JoinZ).IsRequired();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Team).HasColumnName("team");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Team).HasColumnType("int unsigned");
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Team).HasDefaultValue();
        builder.Entity<CharacterBattlegroundData>().Property(e => e.Team).IsRequired();
        builder.Entity<CharacterGifts>().Property(e => e.Entry).HasColumnName("entry");
        builder.Entity<CharacterGifts>().Property(e => e.Entry).HasColumnType("int unsigned");
        builder.Entity<CharacterGifts>().Property(e => e.Entry).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.Entry).IsRequired();
        builder.Entity<CharacterGifts>().Property(e => e.Flags).HasColumnName("flags");
        builder.Entity<CharacterGifts>().Property(e => e.Flags).HasColumnType("int unsigned");
        builder.Entity<CharacterGifts>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.Flags).IsRequired();
        builder.Entity<CharacterGifts>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterGifts>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterGifts>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterGifts>().Property(e => e.ItemGuid).HasColumnName("item_guid");
        builder.Entity<CharacterGifts>().Property(e => e.ItemGuid).HasColumnType("int unsigned");
        builder.Entity<CharacterGifts>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<CharacterGifts>().Property(e => e.ItemGuid).IsRequired();
        builder.Entity<CharacterHomebind>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterHomebind>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterHomebind>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterHomebind>().Property(e => e.Map).HasColumnName("map");
        builder.Entity<CharacterHomebind>().Property(e => e.Map).HasColumnType("int unsigned");
        builder.Entity<CharacterHomebind>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.Map).IsRequired();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionX).HasColumnName("position_x");
        builder.Entity<CharacterHomebind>().Property(e => e.PositionX).HasColumnType("float");
        builder.Entity<CharacterHomebind>().Property(e => e.PositionX).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionX).IsRequired();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionY).HasColumnName("position_y");
        builder.Entity<CharacterHomebind>().Property(e => e.PositionY).HasColumnType("float");
        builder.Entity<CharacterHomebind>().Property(e => e.PositionY).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionY).IsRequired();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionZ).HasColumnName("position_z");
        builder.Entity<CharacterHomebind>().Property(e => e.PositionZ).HasColumnType("float");
        builder.Entity<CharacterHomebind>().Property(e => e.PositionZ).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.PositionZ).IsRequired();
        builder.Entity<CharacterHomebind>().Property(e => e.Zone).HasColumnName("zone");
        builder.Entity<CharacterHomebind>().Property(e => e.Zone).HasColumnType("int unsigned");
        builder.Entity<CharacterHomebind>().Property(e => e.Zone).HasDefaultValue();
        builder.Entity<CharacterHomebind>().Property(e => e.Zone).IsRequired();
        builder.Entity<CharacterHonorCp>().Property(e => e.Date).HasColumnName("date");
        builder.Entity<CharacterHonorCp>().Property(e => e.Date).HasColumnType("int unsigned");
        builder.Entity<CharacterHonorCp>().Property(e => e.Date).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Date).IsRequired();
        builder.Entity<CharacterHonorCp>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterHonorCp>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterHonorCp>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterHonorCp>().Property(e => e.Honor).HasColumnName("honor");
        builder.Entity<CharacterHonorCp>().Property(e => e.Honor).HasColumnType("float");
        builder.Entity<CharacterHonorCp>().Property(e => e.Honor).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Honor).IsRequired();
        builder.Entity<CharacterHonorCp>().Property(e => e.Type).HasColumnName("type");
        builder.Entity<CharacterHonorCp>().Property(e => e.Type).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterHonorCp>().Property(e => e.Type).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Type).IsRequired();
        builder.Entity<CharacterHonorCp>().Property(e => e.Victim).HasColumnName("victim");
        builder.Entity<CharacterHonorCp>().Property(e => e.Victim).HasColumnType("int unsigned");
        builder.Entity<CharacterHonorCp>().Property(e => e.Victim).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.Victim).IsRequired();
        builder.Entity<CharacterHonorCp>().Property(e => e.VictimType).HasColumnName("victim_type");
        builder.Entity<CharacterHonorCp>().Property(e => e.VictimType).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterHonorCp>().Property(e => e.VictimType).HasDefaultValue();
        builder.Entity<CharacterHonorCp>().Property(e => e.VictimType).IsRequired();
        builder.Entity<CharacterInstance>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterInstance>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterInstance>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterInstance>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterInstance>().Property(e => e.Instance).HasColumnName("instance");
        builder.Entity<CharacterInstance>().Property(e => e.Instance).HasColumnType("int unsigned");
        builder.Entity<CharacterInstance>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<CharacterInstance>().Property(e => e.Instance).IsRequired();
        builder.Entity<CharacterInstance>().Property(e => e.Permanent).HasColumnName("permanent");
        builder.Entity<CharacterInstance>().Property(e => e.Permanent).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterInstance>().Property(e => e.Permanent).HasDefaultValue();
        builder.Entity<CharacterInstance>().Property(e => e.Permanent).IsRequired();
        builder.Entity<CharacterInventory>().Property(e => e.Bag).HasColumnName("bag");
        builder.Entity<CharacterInventory>().Property(e => e.Bag).HasColumnType("int unsigned");
        builder.Entity<CharacterInventory>().Property(e => e.Bag).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Bag).IsRequired();
        builder.Entity<CharacterInventory>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterInventory>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterInventory>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterInventory>().Property(e => e.Item).HasColumnName("item");
        builder.Entity<CharacterInventory>().Property(e => e.Item).HasColumnType("int unsigned");
        builder.Entity<CharacterInventory>().Property(e => e.Item).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Item).IsRequired();
        builder.Entity<CharacterInventory>().Property(e => e.ItemTemplate).HasColumnName("item_template");
        builder.Entity<CharacterInventory>().Property(e => e.ItemTemplate).HasColumnType("int unsigned");
        builder.Entity<CharacterInventory>().Property(e => e.ItemTemplate).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.ItemTemplate).IsRequired();
        builder.Entity<CharacterInventory>().Property(e => e.Slot).HasColumnName("slot");
        builder.Entity<CharacterInventory>().Property(e => e.Slot).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterInventory>().Property(e => e.Slot).HasDefaultValue();
        builder.Entity<CharacterInventory>().Property(e => e.Slot).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Abdata).HasColumnName("abdata");
        builder.Entity<CharacterPet>().Property(e => e.Abdata).HasColumnType("longtext");
        builder.Entity<CharacterPet>().Property(e => e.CreatedBySpell).HasColumnName("CreatedBySpell");
        builder.Entity<CharacterPet>().Property(e => e.CreatedBySpell).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.CreatedBySpell).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.CreatedBySpell).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Curhappiness).HasColumnName("curhappiness");
        builder.Entity<CharacterPet>().Property(e => e.Curhappiness).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Curhappiness).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Curhappiness).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Curhealth).HasColumnName("curhealth");
        builder.Entity<CharacterPet>().Property(e => e.Curhealth).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Curhealth).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Curhealth).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Curmana).HasColumnName("curmana");
        builder.Entity<CharacterPet>().Property(e => e.Curmana).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Curmana).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Curmana).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Entry).HasColumnName("entry");
        builder.Entity<CharacterPet>().Property(e => e.Entry).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Entry).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Entry).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Exp).HasColumnName("exp");
        builder.Entity<CharacterPet>().Property(e => e.Exp).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Exp).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Exp).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<CharacterPet>().Property(e => e.Id).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Id).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Level).HasColumnName("level");
        builder.Entity<CharacterPet>().Property(e => e.Level).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Level).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Level).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Loyalty).HasColumnName("loyalty");
        builder.Entity<CharacterPet>().Property(e => e.Loyalty).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Loyalty).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Loyalty).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Loyaltypoints).HasColumnName("loyaltypoints");
        builder.Entity<CharacterPet>().Property(e => e.Loyaltypoints).HasColumnType("int");
        builder.Entity<CharacterPet>().Property(e => e.Loyaltypoints).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Loyaltypoints).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Modelid).HasColumnName("modelid");
        builder.Entity<CharacterPet>().Property(e => e.Modelid).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Modelid).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Name).HasColumnName("name");
        builder.Entity<CharacterPet>().Property(e => e.Name).HasColumnType("varchar(100)");
        builder.Entity<CharacterPet>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Name).HasMaxLength(100);
        builder.Entity<CharacterPet>().Property(e => e.Owner).HasColumnName("owner");
        builder.Entity<CharacterPet>().Property(e => e.Owner).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Owner).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Owner).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.PetType).HasColumnName("PetType");
        builder.Entity<CharacterPet>().Property(e => e.PetType).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterPet>().Property(e => e.PetType).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.PetType).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Reactstate).HasColumnName("Reactstate");
        builder.Entity<CharacterPet>().Property(e => e.Reactstate).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Reactstate).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Reactstate).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Renamed).HasColumnName("renamed");
        builder.Entity<CharacterPet>().Property(e => e.Renamed).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Renamed).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Renamed).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsCost).HasColumnName("resettalents_cost");
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsCost).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsCost).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsCost).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsTime).HasColumnName("resettalents_time");
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsTime).HasColumnType("bigint unsigned");
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsTime).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.ResettalentsTime).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Savetime).HasColumnName("savetime");
        builder.Entity<CharacterPet>().Property(e => e.Savetime).HasColumnType("bigint unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Savetime).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Savetime).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Slot).HasColumnName("slot");
        builder.Entity<CharacterPet>().Property(e => e.Slot).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.Slot).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Slot).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.Teachspelldata).HasColumnName("teachspelldata");
        builder.Entity<CharacterPet>().Property(e => e.Teachspelldata).HasColumnType("longtext");
        builder.Entity<CharacterPet>().Property(e => e.Trainpoint).HasColumnName("trainpoint");
        builder.Entity<CharacterPet>().Property(e => e.Trainpoint).HasColumnType("int");
        builder.Entity<CharacterPet>().Property(e => e.Trainpoint).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.Trainpoint).IsRequired();
        builder.Entity<CharacterPet>().Property(e => e.XpForNextLoyalty).HasColumnName("xpForNextLoyalty");
        builder.Entity<CharacterPet>().Property(e => e.XpForNextLoyalty).HasColumnType("int unsigned");
        builder.Entity<CharacterPet>().Property(e => e.XpForNextLoyalty).HasDefaultValue();
        builder.Entity<CharacterPet>().Property(e => e.XpForNextLoyalty).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Explored).HasColumnName("explored");
        builder.Entity<CharacterQueststatus>().Property(e => e.Explored).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Explored).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Explored).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterQueststatus>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount1).HasColumnName("itemcount1");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount1).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount1).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount1).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount2).HasColumnName("itemcount2");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount2).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount2).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount2).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount3).HasColumnName("itemcount3");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount3).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount3).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount3).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount4).HasColumnName("itemcount4");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount4).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount4).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Itemcount4).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount1).HasColumnName("mobcount1");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount1).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount1).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount1).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount2).HasColumnName("mobcount2");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount2).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount2).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount2).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount3).HasColumnName("mobcount3");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount3).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount3).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount3).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount4).HasColumnName("mobcount4");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount4).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount4).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Mobcount4).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Quest).HasColumnName("quest");
        builder.Entity<CharacterQueststatus>().Property(e => e.Quest).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Quest).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Quest).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Rewarded).HasColumnName("rewarded");
        builder.Entity<CharacterQueststatus>().Property(e => e.Rewarded).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Rewarded).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Rewarded).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Status).HasColumnName("status");
        builder.Entity<CharacterQueststatus>().Property(e => e.Status).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Status).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Status).IsRequired();
        builder.Entity<CharacterQueststatus>().Property(e => e.Timer).HasColumnName("timer");
        builder.Entity<CharacterQueststatus>().Property(e => e.Timer).HasColumnType("bigint unsigned");
        builder.Entity<CharacterQueststatus>().Property(e => e.Timer).HasDefaultValue();
        builder.Entity<CharacterQueststatus>().Property(e => e.Timer).IsRequired();
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Quest).HasColumnName("quest");
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Quest).HasColumnType("int unsigned");
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Quest).HasDefaultValue();
        builder.Entity<CharacterQueststatusWeekly>().Property(e => e.Quest).IsRequired();
        builder.Entity<CharacterReputation>().Property(e => e.Faction).HasColumnName("faction");
        builder.Entity<CharacterReputation>().Property(e => e.Faction).HasColumnType("int unsigned");
        builder.Entity<CharacterReputation>().Property(e => e.Faction).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Faction).IsRequired();
        builder.Entity<CharacterReputation>().Property(e => e.Flags).HasColumnName("flags");
        builder.Entity<CharacterReputation>().Property(e => e.Flags).HasColumnType("int");
        builder.Entity<CharacterReputation>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Flags).IsRequired();
        builder.Entity<CharacterReputation>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterReputation>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterReputation>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterReputation>().Property(e => e.Standing).HasColumnName("standing");
        builder.Entity<CharacterReputation>().Property(e => e.Standing).HasColumnType("int");
        builder.Entity<CharacterReputation>().Property(e => e.Standing).HasDefaultValue();
        builder.Entity<CharacterReputation>().Property(e => e.Standing).IsRequired();
        builder.Entity<CharacterSkills>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterSkills>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterSkills>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterSkills>().Property(e => e.Max).HasColumnName("max");
        builder.Entity<CharacterSkills>().Property(e => e.Max).HasColumnType("mediumint unsigned");
        builder.Entity<CharacterSkills>().Property(e => e.Max).IsRequired();
        builder.Entity<CharacterSkills>().Property(e => e.Skill).HasColumnName("skill");
        builder.Entity<CharacterSkills>().Property(e => e.Skill).HasColumnType("mediumint unsigned");
        builder.Entity<CharacterSkills>().Property(e => e.Skill).IsRequired();
        builder.Entity<CharacterSkills>().Property(e => e.Value).HasColumnName("value");
        builder.Entity<CharacterSkills>().Property(e => e.Value).HasColumnType("mediumint unsigned");
        builder.Entity<CharacterSkills>().Property(e => e.Value).IsRequired();
        builder.Entity<CharacterSocial>().Property(e => e.Flags).HasColumnName("flags");
        builder.Entity<CharacterSocial>().Property(e => e.Flags).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterSocial>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<CharacterSocial>().Property(e => e.Flags).IsRequired();
        builder.Entity<CharacterSocial>().Property(e => e.Friend).HasColumnName("friend");
        builder.Entity<CharacterSocial>().Property(e => e.Friend).HasColumnType("int unsigned");
        builder.Entity<CharacterSocial>().Property(e => e.Friend).HasDefaultValue();
        builder.Entity<CharacterSocial>().Property(e => e.Friend).IsRequired();
        builder.Entity<CharacterSocial>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterSocial>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterSocial>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterSocial>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterSpell>().Property(e => e.Active).HasColumnName("active");
        builder.Entity<CharacterSpell>().Property(e => e.Active).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterSpell>().Property(e => e.Active).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Active).IsRequired();
        builder.Entity<CharacterSpell>().Property(e => e.Disabled).HasColumnName("disabled");
        builder.Entity<CharacterSpell>().Property(e => e.Disabled).HasColumnType("tinyint unsigned");
        builder.Entity<CharacterSpell>().Property(e => e.Disabled).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Disabled).IsRequired();
        builder.Entity<CharacterSpell>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterSpell>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterSpell>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterSpell>().Property(e => e.Spell).HasColumnName("spell");
        builder.Entity<CharacterSpell>().Property(e => e.Spell).HasColumnType("int unsigned");
        builder.Entity<CharacterSpell>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<CharacterSpell>().Property(e => e.Spell).IsRequired();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Category).HasColumnName("Category");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Category).HasColumnType("int unsigned");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Category).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Category).IsRequired();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.CategoryExpireTime).HasColumnName("CategoryExpireTime");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.CategoryExpireTime).HasColumnType("bigint unsigned");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.CategoryExpireTime).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.CategoryExpireTime).IsRequired();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.ItemId).HasColumnName("ItemId");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.ItemId).HasColumnType("int unsigned");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.ItemId).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.ItemId).IsRequired();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellExpireTime).HasColumnName("SpellExpireTime");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellExpireTime).HasColumnType("bigint unsigned");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellExpireTime).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellExpireTime).IsRequired();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellId).HasColumnName("SpellId");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellId).HasColumnType("int unsigned");
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellId).HasDefaultValue();
        builder.Entity<CharacterSpellCooldown>().Property(e => e.SpellId).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Agility).HasColumnName("agility");
        builder.Entity<CharacterStats>().Property(e => e.Agility).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Agility).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Agility).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Armor).HasColumnName("armor");
        builder.Entity<CharacterStats>().Property(e => e.Armor).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Armor).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Armor).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.AttackPower).HasColumnName("attackPower");
        builder.Entity<CharacterStats>().Property(e => e.AttackPower).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.AttackPower).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.AttackPower).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.BlockPct).HasColumnName("blockPct");
        builder.Entity<CharacterStats>().Property(e => e.BlockPct).HasColumnType("float unsigned");
        builder.Entity<CharacterStats>().Property(e => e.BlockPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.BlockPct).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.CritPct).HasColumnName("critPct");
        builder.Entity<CharacterStats>().Property(e => e.CritPct).HasColumnType("float unsigned");
        builder.Entity<CharacterStats>().Property(e => e.CritPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.CritPct).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.DodgePct).HasColumnName("dodgePct");
        builder.Entity<CharacterStats>().Property(e => e.DodgePct).HasColumnType("float unsigned");
        builder.Entity<CharacterStats>().Property(e => e.DodgePct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.DodgePct).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CharacterStats>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Guid).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Intellect).HasColumnName("intellect");
        builder.Entity<CharacterStats>().Property(e => e.Intellect).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Intellect).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Intellect).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxhealth).HasColumnName("maxhealth");
        builder.Entity<CharacterStats>().Property(e => e.Maxhealth).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxhealth).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxhealth).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower1).HasColumnName("maxpower1");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower1).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower1).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower1).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower2).HasColumnName("maxpower2");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower2).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower2).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower2).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower3).HasColumnName("maxpower3");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower3).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower3).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower3).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower4).HasColumnName("maxpower4");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower4).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower4).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower4).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower5).HasColumnName("maxpower5");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower5).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower5).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower5).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower6).HasColumnName("maxpower6");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower6).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower6).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower6).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower7).HasColumnName("maxpower7");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower7).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Maxpower7).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Maxpower7).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.ParryPct).HasColumnName("parryPct");
        builder.Entity<CharacterStats>().Property(e => e.ParryPct).HasColumnType("float unsigned");
        builder.Entity<CharacterStats>().Property(e => e.ParryPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ParryPct).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.RangedAttackPower).HasColumnName("rangedAttackPower");
        builder.Entity<CharacterStats>().Property(e => e.RangedAttackPower).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.RangedAttackPower).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.RangedAttackPower).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.RangedCritPct).HasColumnName("rangedCritPct");
        builder.Entity<CharacterStats>().Property(e => e.RangedCritPct).HasColumnType("float unsigned");
        builder.Entity<CharacterStats>().Property(e => e.RangedCritPct).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.RangedCritPct).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.ResArcane).HasColumnName("resArcane");
        builder.Entity<CharacterStats>().Property(e => e.ResArcane).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.ResArcane).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResArcane).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.ResFire).HasColumnName("resFire");
        builder.Entity<CharacterStats>().Property(e => e.ResFire).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.ResFire).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResFire).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.ResFrost).HasColumnName("resFrost");
        builder.Entity<CharacterStats>().Property(e => e.ResFrost).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.ResFrost).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResFrost).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.ResHoly).HasColumnName("resHoly");
        builder.Entity<CharacterStats>().Property(e => e.ResHoly).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.ResHoly).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResHoly).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.ResNature).HasColumnName("resNature");
        builder.Entity<CharacterStats>().Property(e => e.ResNature).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.ResNature).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResNature).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.ResShadow).HasColumnName("resShadow");
        builder.Entity<CharacterStats>().Property(e => e.ResShadow).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.ResShadow).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.ResShadow).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Spirit).HasColumnName("spirit");
        builder.Entity<CharacterStats>().Property(e => e.Spirit).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Spirit).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Spirit).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Stamina).HasColumnName("stamina");
        builder.Entity<CharacterStats>().Property(e => e.Stamina).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Stamina).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Stamina).IsRequired();
        builder.Entity<CharacterStats>().Property(e => e.Strength).HasColumnName("strength");
        builder.Entity<CharacterStats>().Property(e => e.Strength).HasColumnType("int unsigned");
        builder.Entity<CharacterStats>().Property(e => e.Strength).HasDefaultValue();
        builder.Entity<CharacterStats>().Property(e => e.Strength).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Account).HasColumnName("account");
        builder.Entity<CharacterTutorial>().Property(e => e.Account).HasColumnType("bigint unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Account).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut0).HasColumnName("tut0");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut0).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut0).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut0).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut1).HasColumnName("tut1");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut1).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut1).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut1).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut2).HasColumnName("tut2");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut2).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut2).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut2).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut3).HasColumnName("tut3");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut3).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut3).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut3).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut4).HasColumnName("tut4");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut4).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut4).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut4).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut5).HasColumnName("tut5");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut5).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut5).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut5).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut6).HasColumnName("tut6");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut6).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut6).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut6).IsRequired();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut7).HasColumnName("tut7");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut7).HasColumnType("int unsigned");
        builder.Entity<CharacterTutorial>().Property(e => e.Tut7).HasDefaultValue();
        builder.Entity<CharacterTutorial>().Property(e => e.Tut7).IsRequired();
        builder.Entity<Characters>().Property(e => e.Account).HasColumnName("account");
        builder.Entity<Characters>().Property(e => e.Account).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Account).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Account).IsRequired();
        builder.Entity<Characters>().Property(e => e.ActionBars).HasColumnName("actionBars");
        builder.Entity<Characters>().Property(e => e.ActionBars).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.ActionBars).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ActionBars).IsRequired();
        builder.Entity<Characters>().Property(e => e.AmmoId).HasColumnName("ammoId");
        builder.Entity<Characters>().Property(e => e.AmmoId).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.AmmoId).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.AmmoId).IsRequired();
        builder.Entity<Characters>().Property(e => e.AtLogin).HasColumnName("at_login");
        builder.Entity<Characters>().Property(e => e.AtLogin).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.AtLogin).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.AtLogin).IsRequired();
        builder.Entity<Characters>().Property(e => e.Cinematic).HasColumnName("cinematic");
        builder.Entity<Characters>().Property(e => e.Cinematic).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.Cinematic).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Cinematic).IsRequired();
        builder.Entity<Characters>().Property(e => e.Class).HasColumnName("class");
        builder.Entity<Characters>().Property(e => e.Class).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.Class).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Class).IsRequired();
        builder.Entity<Characters>().Property(e => e.DeathExpireTime).HasColumnName("death_expire_time");
        builder.Entity<Characters>().Property(e => e.DeathExpireTime).HasColumnType("bigint unsigned");
        builder.Entity<Characters>().Property(e => e.DeathExpireTime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.DeathExpireTime).IsRequired();
        builder.Entity<Characters>().Property(e => e.DeleteDate).HasColumnName("deleteDate");
        builder.Entity<Characters>().Property(e => e.DeleteDate).HasColumnType("bigint unsigned");
        builder.Entity<Characters>().Property(e => e.DeleteInfosAccount).HasColumnName("deleteInfos_Account");
        builder.Entity<Characters>().Property(e => e.DeleteInfosAccount).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.DeleteInfosName).HasColumnName("deleteInfos_Name");
        builder.Entity<Characters>().Property(e => e.DeleteInfosName).HasColumnType("varchar(12)");
        builder.Entity<Characters>().Property(e => e.DeleteInfosName).HasMaxLength(12);
        builder.Entity<Characters>().Property(e => e.Drunk).HasColumnName("drunk");
        builder.Entity<Characters>().Property(e => e.Drunk).HasColumnType("smallint unsigned");
        builder.Entity<Characters>().Property(e => e.Drunk).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Drunk).IsRequired();
        builder.Entity<Characters>().Property(e => e.EquipmentCache).HasColumnName("equipmentCache");
        builder.Entity<Characters>().Property(e => e.EquipmentCache).HasColumnType("longtext");
        builder.Entity<Characters>().Property(e => e.ExploredZones).HasColumnName("exploredZones");
        builder.Entity<Characters>().Property(e => e.ExploredZones).HasColumnType("longtext");
        builder.Entity<Characters>().Property(e => e.ExtraFlags).HasColumnName("extra_flags");
        builder.Entity<Characters>().Property(e => e.ExtraFlags).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.ExtraFlags).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ExtraFlags).IsRequired();
        builder.Entity<Characters>().Property(e => e.Gender).HasColumnName("gender");
        builder.Entity<Characters>().Property(e => e.Gender).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.Gender).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Gender).IsRequired();
        builder.Entity<Characters>().Property(e => e.GrantableLevels).HasColumnName("grantableLevels");
        builder.Entity<Characters>().Property(e => e.GrantableLevels).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.GrantableLevels).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<Characters>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Guid).IsRequired();
        builder.Entity<Characters>().Property(e => e.Health).HasColumnName("health");
        builder.Entity<Characters>().Property(e => e.Health).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Health).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Health).IsRequired();
        builder.Entity<Characters>().Property(e => e.HonorHighestRank).HasColumnName("honor_highest_rank");
        builder.Entity<Characters>().Property(e => e.HonorHighestRank).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.HonorHighestRank).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.HonorHighestRank).IsRequired();
        builder.Entity<Characters>().Property(e => e.HonorStanding).HasColumnName("honor_standing");
        builder.Entity<Characters>().Property(e => e.HonorStanding).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.HonorStanding).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.HonorStanding).IsRequired();
        builder.Entity<Characters>().Property(e => e.IsLogoutResting).HasColumnName("is_logout_resting");
        builder.Entity<Characters>().Property(e => e.IsLogoutResting).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.IsLogoutResting).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.IsLogoutResting).IsRequired();
        builder.Entity<Characters>().Property(e => e.Level).HasColumnName("level");
        builder.Entity<Characters>().Property(e => e.Level).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.Level).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Level).IsRequired();
        builder.Entity<Characters>().Property(e => e.Leveltime).HasColumnName("leveltime");
        builder.Entity<Characters>().Property(e => e.Leveltime).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Leveltime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Leveltime).IsRequired();
        builder.Entity<Characters>().Property(e => e.LogoutTime).HasColumnName("logout_time");
        builder.Entity<Characters>().Property(e => e.LogoutTime).HasColumnType("bigint unsigned");
        builder.Entity<Characters>().Property(e => e.LogoutTime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.LogoutTime).IsRequired();
        builder.Entity<Characters>().Property(e => e.Map).HasColumnName("map");
        builder.Entity<Characters>().Property(e => e.Map).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Map).IsRequired();
        builder.Entity<Characters>().Property(e => e.Money).HasColumnName("money");
        builder.Entity<Characters>().Property(e => e.Money).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Money).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Money).IsRequired();
        builder.Entity<Characters>().Property(e => e.Name).HasColumnName("name");
        builder.Entity<Characters>().Property(e => e.Name).HasColumnType("varchar(12)");
        builder.Entity<Characters>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Name).IsRequired();
        builder.Entity<Characters>().Property(e => e.Name).HasMaxLength(12);
        builder.Entity<Characters>().Property(e => e.Online).HasColumnName("online");
        builder.Entity<Characters>().Property(e => e.Online).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.Online).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Online).IsRequired();
        builder.Entity<Characters>().Property(e => e.Orientation).HasColumnName("orientation");
        builder.Entity<Characters>().Property(e => e.Orientation).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.Orientation).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Orientation).IsRequired();
        builder.Entity<Characters>().Property(e => e.PlayerBytes).HasColumnName("playerBytes");
        builder.Entity<Characters>().Property(e => e.PlayerBytes).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.PlayerBytes).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PlayerBytes).IsRequired();
        builder.Entity<Characters>().Property(e => e.PlayerBytes2).HasColumnName("playerBytes2");
        builder.Entity<Characters>().Property(e => e.PlayerBytes2).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.PlayerBytes2).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PlayerBytes2).IsRequired();
        builder.Entity<Characters>().Property(e => e.PlayerFlags).HasColumnName("playerFlags");
        builder.Entity<Characters>().Property(e => e.PlayerFlags).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.PlayerFlags).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PlayerFlags).IsRequired();
        builder.Entity<Characters>().Property(e => e.PositionX).HasColumnName("position_x");
        builder.Entity<Characters>().Property(e => e.PositionX).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.PositionX).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PositionX).IsRequired();
        builder.Entity<Characters>().Property(e => e.PositionY).HasColumnName("position_y");
        builder.Entity<Characters>().Property(e => e.PositionY).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.PositionY).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PositionY).IsRequired();
        builder.Entity<Characters>().Property(e => e.PositionZ).HasColumnName("position_z");
        builder.Entity<Characters>().Property(e => e.PositionZ).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.PositionZ).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.PositionZ).IsRequired();
        builder.Entity<Characters>().Property(e => e.Power1).HasColumnName("power1");
        builder.Entity<Characters>().Property(e => e.Power1).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Power1).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power1).IsRequired();
        builder.Entity<Characters>().Property(e => e.Power2).HasColumnName("power2");
        builder.Entity<Characters>().Property(e => e.Power2).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Power2).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power2).IsRequired();
        builder.Entity<Characters>().Property(e => e.Power3).HasColumnName("power3");
        builder.Entity<Characters>().Property(e => e.Power3).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Power3).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power3).IsRequired();
        builder.Entity<Characters>().Property(e => e.Power4).HasColumnName("power4");
        builder.Entity<Characters>().Property(e => e.Power4).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Power4).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power4).IsRequired();
        builder.Entity<Characters>().Property(e => e.Power5).HasColumnName("power5");
        builder.Entity<Characters>().Property(e => e.Power5).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Power5).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Power5).IsRequired();
        builder.Entity<Characters>().Property(e => e.Race).HasColumnName("race");
        builder.Entity<Characters>().Property(e => e.Race).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.Race).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Race).IsRequired();
        builder.Entity<Characters>().Property(e => e.ResettalentsCost).HasColumnName("resettalents_cost");
        builder.Entity<Characters>().Property(e => e.ResettalentsCost).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.ResettalentsCost).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ResettalentsCost).IsRequired();
        builder.Entity<Characters>().Property(e => e.ResettalentsTime).HasColumnName("resettalents_time");
        builder.Entity<Characters>().Property(e => e.ResettalentsTime).HasColumnType("bigint unsigned");
        builder.Entity<Characters>().Property(e => e.ResettalentsTime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.ResettalentsTime).IsRequired();
        builder.Entity<Characters>().Property(e => e.RestBonus).HasColumnName("rest_bonus");
        builder.Entity<Characters>().Property(e => e.RestBonus).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.RestBonus).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.RestBonus).IsRequired();
        builder.Entity<Characters>().Property(e => e.StableSlots).HasColumnName("stable_slots");
        builder.Entity<Characters>().Property(e => e.StableSlots).HasColumnType("tinyint unsigned");
        builder.Entity<Characters>().Property(e => e.StableSlots).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StableSlots).IsRequired();
        builder.Entity<Characters>().Property(e => e.StoredDishonorableKills).HasColumnName("stored_dishonorable_kills");
        builder.Entity<Characters>().Property(e => e.StoredDishonorableKills).HasColumnType("int");
        builder.Entity<Characters>().Property(e => e.StoredDishonorableKills).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StoredDishonorableKills).IsRequired();
        builder.Entity<Characters>().Property(e => e.StoredHonorRating).HasColumnName("stored_honor_rating");
        builder.Entity<Characters>().Property(e => e.StoredHonorRating).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.StoredHonorRating).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StoredHonorRating).IsRequired();
        builder.Entity<Characters>().Property(e => e.StoredHonorableKills).HasColumnName("stored_honorable_kills");
        builder.Entity<Characters>().Property(e => e.StoredHonorableKills).HasColumnType("int");
        builder.Entity<Characters>().Property(e => e.StoredHonorableKills).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.StoredHonorableKills).IsRequired();
        builder.Entity<Characters>().Property(e => e.TaxiPath).HasColumnName("taxi_path");
        builder.Entity<Characters>().Property(e => e.TaxiPath).HasColumnType("text");
        builder.Entity<Characters>().Property(e => e.TaxiPath).HasMaxLength(65535);
        builder.Entity<Characters>().Property(e => e.Taximask).HasColumnName("taximask");
        builder.Entity<Characters>().Property(e => e.Taximask).HasColumnType("longtext");
        builder.Entity<Characters>().Property(e => e.Totaltime).HasColumnName("totaltime");
        builder.Entity<Characters>().Property(e => e.Totaltime).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Totaltime).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Totaltime).IsRequired();
        builder.Entity<Characters>().Property(e => e.TransO).HasColumnName("trans_o");
        builder.Entity<Characters>().Property(e => e.TransO).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.TransO).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransO).IsRequired();
        builder.Entity<Characters>().Property(e => e.TransX).HasColumnName("trans_x");
        builder.Entity<Characters>().Property(e => e.TransX).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.TransX).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransX).IsRequired();
        builder.Entity<Characters>().Property(e => e.TransY).HasColumnName("trans_y");
        builder.Entity<Characters>().Property(e => e.TransY).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.TransY).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransY).IsRequired();
        builder.Entity<Characters>().Property(e => e.TransZ).HasColumnName("trans_z");
        builder.Entity<Characters>().Property(e => e.TransZ).HasColumnType("float");
        builder.Entity<Characters>().Property(e => e.TransZ).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.TransZ).IsRequired();
        builder.Entity<Characters>().Property(e => e.Transguid).HasColumnName("transguid");
        builder.Entity<Characters>().Property(e => e.Transguid).HasColumnType("bigint unsigned");
        builder.Entity<Characters>().Property(e => e.Transguid).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Transguid).IsRequired();
        builder.Entity<Characters>().Property(e => e.WatchedFaction).HasColumnName("watchedFaction");
        builder.Entity<Characters>().Property(e => e.WatchedFaction).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.WatchedFaction).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.WatchedFaction).IsRequired();
        builder.Entity<Characters>().Property(e => e.Xp).HasColumnName("xp");
        builder.Entity<Characters>().Property(e => e.Xp).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Xp).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Xp).IsRequired();
        builder.Entity<Characters>().Property(e => e.Zone).HasColumnName("zone");
        builder.Entity<Characters>().Property(e => e.Zone).HasColumnType("int unsigned");
        builder.Entity<Characters>().Property(e => e.Zone).HasDefaultValue();
        builder.Entity<Characters>().Property(e => e.Zone).IsRequired();
        builder.Entity<Corpse>().Property(e => e.CorpseType).HasColumnName("corpse_type");
        builder.Entity<Corpse>().Property(e => e.CorpseType).HasColumnType("tinyint unsigned");
        builder.Entity<Corpse>().Property(e => e.CorpseType).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.CorpseType).IsRequired();
        builder.Entity<Corpse>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<Corpse>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<Corpse>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Guid).IsRequired();
        builder.Entity<Corpse>().Property(e => e.Instance).HasColumnName("instance");
        builder.Entity<Corpse>().Property(e => e.Instance).HasColumnType("int unsigned");
        builder.Entity<Corpse>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Instance).IsRequired();
        builder.Entity<Corpse>().Property(e => e.Map).HasColumnName("map");
        builder.Entity<Corpse>().Property(e => e.Map).HasColumnType("int unsigned");
        builder.Entity<Corpse>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Map).IsRequired();
        builder.Entity<Corpse>().Property(e => e.Orientation).HasColumnName("orientation");
        builder.Entity<Corpse>().Property(e => e.Orientation).HasColumnType("float");
        builder.Entity<Corpse>().Property(e => e.Orientation).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Orientation).IsRequired();
        builder.Entity<Corpse>().Property(e => e.Player).HasColumnName("player");
        builder.Entity<Corpse>().Property(e => e.Player).HasColumnType("int unsigned");
        builder.Entity<Corpse>().Property(e => e.Player).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Player).IsRequired();
        builder.Entity<Corpse>().Property(e => e.PositionX).HasColumnName("position_x");
        builder.Entity<Corpse>().Property(e => e.PositionX).HasColumnType("float");
        builder.Entity<Corpse>().Property(e => e.PositionX).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.PositionX).IsRequired();
        builder.Entity<Corpse>().Property(e => e.PositionY).HasColumnName("position_y");
        builder.Entity<Corpse>().Property(e => e.PositionY).HasColumnType("float");
        builder.Entity<Corpse>().Property(e => e.PositionY).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.PositionY).IsRequired();
        builder.Entity<Corpse>().Property(e => e.PositionZ).HasColumnName("position_z");
        builder.Entity<Corpse>().Property(e => e.PositionZ).HasColumnType("float");
        builder.Entity<Corpse>().Property(e => e.PositionZ).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.PositionZ).IsRequired();
        builder.Entity<Corpse>().Property(e => e.Time).HasColumnName("time");
        builder.Entity<Corpse>().Property(e => e.Time).HasColumnType("bigint unsigned");
        builder.Entity<Corpse>().Property(e => e.Time).HasDefaultValue();
        builder.Entity<Corpse>().Property(e => e.Time).IsRequired();
        builder.Entity<CreatureRespawn>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<CreatureRespawn>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<CreatureRespawn>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<CreatureRespawn>().Property(e => e.Guid).IsRequired();
        builder.Entity<CreatureRespawn>().Property(e => e.Instance).HasColumnName("instance");
        builder.Entity<CreatureRespawn>().Property(e => e.Instance).HasColumnType("mediumint unsigned");
        builder.Entity<CreatureRespawn>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<CreatureRespawn>().Property(e => e.Instance).IsRequired();
        builder.Entity<CreatureRespawn>().Property(e => e.Respawntime).HasColumnName("respawntime");
        builder.Entity<CreatureRespawn>().Property(e => e.Respawntime).HasColumnType("bigint unsigned");
        builder.Entity<CreatureRespawn>().Property(e => e.Respawntime).HasDefaultValue();
        builder.Entity<CreatureRespawn>().Property(e => e.Respawntime).IsRequired();
        builder.Entity<GameEventStatus>().Property(e => e.Event).HasColumnName("event");
        builder.Entity<GameEventStatus>().Property(e => e.Event).HasColumnType("smallint unsigned");
        builder.Entity<GameEventStatus>().Property(e => e.Event).HasDefaultValue();
        builder.Entity<GameEventStatus>().Property(e => e.Event).IsRequired();
        builder.Entity<GameobjectRespawn>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<GameobjectRespawn>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<GameobjectRespawn>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<GameobjectRespawn>().Property(e => e.Guid).IsRequired();
        builder.Entity<GameobjectRespawn>().Property(e => e.Instance).HasColumnName("instance");
        builder.Entity<GameobjectRespawn>().Property(e => e.Instance).HasColumnType("mediumint unsigned");
        builder.Entity<GameobjectRespawn>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<GameobjectRespawn>().Property(e => e.Instance).IsRequired();
        builder.Entity<GameobjectRespawn>().Property(e => e.Respawntime).HasColumnName("respawntime");
        builder.Entity<GameobjectRespawn>().Property(e => e.Respawntime).HasColumnType("bigint unsigned");
        builder.Entity<GameobjectRespawn>().Property(e => e.Respawntime).HasDefaultValue();
        builder.Entity<GameobjectRespawn>().Property(e => e.Respawntime).IsRequired();
        builder.Entity<GmSurveys>().Property(e => e.Answer1).HasColumnName("answer1");
        builder.Entity<GmSurveys>().Property(e => e.Answer1).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer10).HasColumnName("answer10");
        builder.Entity<GmSurveys>().Property(e => e.Answer10).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer2).HasColumnName("answer2");
        builder.Entity<GmSurveys>().Property(e => e.Answer2).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer3).HasColumnName("answer3");
        builder.Entity<GmSurveys>().Property(e => e.Answer3).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer4).HasColumnName("answer4");
        builder.Entity<GmSurveys>().Property(e => e.Answer4).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer5).HasColumnName("answer5");
        builder.Entity<GmSurveys>().Property(e => e.Answer5).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer6).HasColumnName("answer6");
        builder.Entity<GmSurveys>().Property(e => e.Answer6).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer7).HasColumnName("answer7");
        builder.Entity<GmSurveys>().Property(e => e.Answer7).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer8).HasColumnName("answer8");
        builder.Entity<GmSurveys>().Property(e => e.Answer8).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Answer9).HasColumnName("answer9");
        builder.Entity<GmSurveys>().Property(e => e.Answer9).HasColumnType("tinyint unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Comment).HasColumnName("comment");
        builder.Entity<GmSurveys>().Property(e => e.Comment).HasColumnType("text");
        builder.Entity<GmSurveys>().Property(e => e.Comment).HasMaxLength(65535);
        builder.Entity<GmSurveys>().Property(e => e.Surveyid).HasColumnName("surveyid");
        builder.Entity<GmSurveys>().Property(e => e.Surveyid).HasColumnType("int unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Surveyid).IsRequired();
        builder.Entity<GmSurveys>().Property(e => e.Ticketid).HasColumnName("ticketid");
        builder.Entity<GmSurveys>().Property(e => e.Ticketid).HasColumnType("int unsigned");
        builder.Entity<GmSurveys>().Property(e => e.Ticketid).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Answered).HasColumnName("answered");
        builder.Entity<GmTickets>().Property(e => e.Answered).HasColumnType("bigint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Answered).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Answered).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.AssigneeGuid).HasColumnName("assignee_guid");
        builder.Entity<GmTickets>().Property(e => e.AssigneeGuid).HasColumnType("int unsigned");
        builder.Entity<GmTickets>().Property(e => e.AssigneeGuid).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.AssigneeGuid).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.AssigneeName).HasColumnName("assignee_name");
        builder.Entity<GmTickets>().Property(e => e.AssigneeName).HasColumnType("varchar(12)");
        builder.Entity<GmTickets>().Property(e => e.AssigneeName).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.AssigneeName).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.AssigneeName).HasMaxLength(12);
        builder.Entity<GmTickets>().Property(e => e.AuthorGuid).HasColumnName("author_guid");
        builder.Entity<GmTickets>().Property(e => e.AuthorGuid).HasColumnType("int unsigned");
        builder.Entity<GmTickets>().Property(e => e.AuthorGuid).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.AuthorName).HasColumnName("author_name");
        builder.Entity<GmTickets>().Property(e => e.AuthorName).HasColumnType("varchar(12)");
        builder.Entity<GmTickets>().Property(e => e.AuthorName).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.AuthorName).HasMaxLength(12);
        builder.Entity<GmTickets>().Property(e => e.Category).HasColumnName("category");
        builder.Entity<GmTickets>().Property(e => e.Category).HasColumnType("tinyint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Category).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Category).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Closed).HasColumnName("closed");
        builder.Entity<GmTickets>().Property(e => e.Closed).HasColumnType("bigint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Closed).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Closed).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Conclusion).HasColumnName("conclusion");
        builder.Entity<GmTickets>().Property(e => e.Conclusion).HasColumnType("varchar(255)");
        builder.Entity<GmTickets>().Property(e => e.Conclusion).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Conclusion).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Conclusion).HasMaxLength(255);
        builder.Entity<GmTickets>().Property(e => e.Created).HasColumnName("created");
        builder.Entity<GmTickets>().Property(e => e.Created).HasColumnType("bigint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Created).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<GmTickets>().Property(e => e.Id).HasColumnType("int unsigned");
        builder.Entity<GmTickets>().Property(e => e.Id).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Level).HasColumnName("level");
        builder.Entity<GmTickets>().Property(e => e.Level).HasColumnType("tinyint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Level).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Level).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Locale).HasColumnName("locale");
        builder.Entity<GmTickets>().Property(e => e.Locale).HasColumnType("varchar(4)");
        builder.Entity<GmTickets>().Property(e => e.Locale).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Locale).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Locale).HasMaxLength(4);
        builder.Entity<GmTickets>().Property(e => e.Mapid).HasColumnName("mapid");
        builder.Entity<GmTickets>().Property(e => e.Mapid).HasColumnType("int unsigned");
        builder.Entity<GmTickets>().Property(e => e.Mapid).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Mapid).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Notes).HasColumnName("notes");
        builder.Entity<GmTickets>().Property(e => e.Notes).HasColumnType("varchar(10000)");
        builder.Entity<GmTickets>().Property(e => e.Notes).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Notes).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Notes).HasMaxLength(10000);
        builder.Entity<GmTickets>().Property(e => e.O).HasColumnName("o");
        builder.Entity<GmTickets>().Property(e => e.O).HasColumnType("float");
        builder.Entity<GmTickets>().Property(e => e.O).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.O).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Seen).HasColumnName("seen");
        builder.Entity<GmTickets>().Property(e => e.Seen).HasColumnType("bigint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Seen).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Seen).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.State).HasColumnName("state");
        builder.Entity<GmTickets>().Property(e => e.State).HasColumnType("tinyint unsigned");
        builder.Entity<GmTickets>().Property(e => e.State).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.State).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Status).HasColumnName("status");
        builder.Entity<GmTickets>().Property(e => e.Status).HasColumnType("tinyint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Status).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Status).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Text).HasColumnName("text");
        builder.Entity<GmTickets>().Property(e => e.Text).HasColumnType("text");
        builder.Entity<GmTickets>().Property(e => e.Text).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Text).HasMaxLength(65535);
        builder.Entity<GmTickets>().Property(e => e.Updated).HasColumnName("updated");
        builder.Entity<GmTickets>().Property(e => e.Updated).HasColumnType("bigint unsigned");
        builder.Entity<GmTickets>().Property(e => e.Updated).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Updated).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.X).HasColumnName("x");
        builder.Entity<GmTickets>().Property(e => e.X).HasColumnType("float");
        builder.Entity<GmTickets>().Property(e => e.X).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.X).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Y).HasColumnName("y");
        builder.Entity<GmTickets>().Property(e => e.Y).HasColumnType("float");
        builder.Entity<GmTickets>().Property(e => e.Y).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Y).IsRequired();
        builder.Entity<GmTickets>().Property(e => e.Z).HasColumnName("z");
        builder.Entity<GmTickets>().Property(e => e.Z).HasColumnType("float");
        builder.Entity<GmTickets>().Property(e => e.Z).HasDefaultValue();
        builder.Entity<GmTickets>().Property(e => e.Z).IsRequired();
        builder.Entity<GroupInstance>().Property(e => e.Instance).HasColumnName("instance");
        builder.Entity<GroupInstance>().Property(e => e.Instance).HasColumnType("int unsigned");
        builder.Entity<GroupInstance>().Property(e => e.Instance).HasDefaultValue();
        builder.Entity<GroupInstance>().Property(e => e.Instance).IsRequired();
        builder.Entity<GroupInstance>().Property(e => e.LeaderGuid).HasColumnName("leaderGuid");
        builder.Entity<GroupInstance>().Property(e => e.LeaderGuid).HasColumnType("int unsigned");
        builder.Entity<GroupInstance>().Property(e => e.LeaderGuid).HasDefaultValue();
        builder.Entity<GroupInstance>().Property(e => e.LeaderGuid).IsRequired();
        builder.Entity<GroupInstance>().Property(e => e.Permanent).HasColumnName("permanent");
        builder.Entity<GroupInstance>().Property(e => e.Permanent).HasColumnType("tinyint unsigned");
        builder.Entity<GroupInstance>().Property(e => e.Permanent).HasDefaultValue();
        builder.Entity<GroupInstance>().Property(e => e.Permanent).IsRequired();
        builder.Entity<GroupMember>().Property(e => e.Assistant).HasColumnName("assistant");
        builder.Entity<GroupMember>().Property(e => e.Assistant).HasColumnType("tinyint unsigned");
        builder.Entity<GroupMember>().Property(e => e.Assistant).IsRequired();
        builder.Entity<GroupMember>().Property(e => e.GroupId).HasColumnName("groupId");
        builder.Entity<GroupMember>().Property(e => e.GroupId).HasColumnType("int unsigned");
        builder.Entity<GroupMember>().Property(e => e.GroupId).IsRequired();
        builder.Entity<GroupMember>().Property(e => e.MemberGuid).HasColumnName("memberGuid");
        builder.Entity<GroupMember>().Property(e => e.MemberGuid).HasColumnType("int unsigned");
        builder.Entity<GroupMember>().Property(e => e.MemberGuid).IsRequired();
        builder.Entity<GroupMember>().Property(e => e.Subgroup).HasColumnName("subgroup");
        builder.Entity<GroupMember>().Property(e => e.Subgroup).HasColumnType("smallint unsigned");
        builder.Entity<GroupMember>().Property(e => e.Subgroup).IsRequired();
        builder.Entity<Groups>().Property(e => e.GroupId).HasColumnName("groupId");
        builder.Entity<Groups>().Property(e => e.GroupId).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.GroupId).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon1).HasColumnName("icon1");
        builder.Entity<Groups>().Property(e => e.Icon1).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon1).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon2).HasColumnName("icon2");
        builder.Entity<Groups>().Property(e => e.Icon2).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon2).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon3).HasColumnName("icon3");
        builder.Entity<Groups>().Property(e => e.Icon3).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon3).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon4).HasColumnName("icon4");
        builder.Entity<Groups>().Property(e => e.Icon4).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon4).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon5).HasColumnName("icon5");
        builder.Entity<Groups>().Property(e => e.Icon5).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon5).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon6).HasColumnName("icon6");
        builder.Entity<Groups>().Property(e => e.Icon6).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon6).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon7).HasColumnName("icon7");
        builder.Entity<Groups>().Property(e => e.Icon7).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon7).IsRequired();
        builder.Entity<Groups>().Property(e => e.Icon8).HasColumnName("icon8");
        builder.Entity<Groups>().Property(e => e.Icon8).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.Icon8).IsRequired();
        builder.Entity<Groups>().Property(e => e.IsRaid).HasColumnName("isRaid");
        builder.Entity<Groups>().Property(e => e.IsRaid).HasColumnType("tinyint unsigned");
        builder.Entity<Groups>().Property(e => e.IsRaid).IsRequired();
        builder.Entity<Groups>().Property(e => e.LeaderGuid).HasColumnName("leaderGuid");
        builder.Entity<Groups>().Property(e => e.LeaderGuid).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.LeaderGuid).IsRequired();
        builder.Entity<Groups>().Property(e => e.LooterGuid).HasColumnName("looterGuid");
        builder.Entity<Groups>().Property(e => e.LooterGuid).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.LooterGuid).IsRequired();
        builder.Entity<Groups>().Property(e => e.LootMethod).HasColumnName("lootMethod");
        builder.Entity<Groups>().Property(e => e.LootMethod).HasColumnType("tinyint unsigned");
        builder.Entity<Groups>().Property(e => e.LootMethod).IsRequired();
        builder.Entity<Groups>().Property(e => e.LootThreshold).HasColumnName("lootThreshold");
        builder.Entity<Groups>().Property(e => e.LootThreshold).HasColumnType("tinyint unsigned");
        builder.Entity<Groups>().Property(e => e.LootThreshold).IsRequired();
        builder.Entity<Groups>().Property(e => e.MainAssistant).HasColumnName("mainAssistant");
        builder.Entity<Groups>().Property(e => e.MainAssistant).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.MainAssistant).IsRequired();
        builder.Entity<Groups>().Property(e => e.MainTank).HasColumnName("mainTank");
        builder.Entity<Groups>().Property(e => e.MainTank).HasColumnType("int unsigned");
        builder.Entity<Groups>().Property(e => e.MainTank).IsRequired();
        builder.Entity<Guild>().Property(e => e.BackgroundColor).HasColumnName("BackgroundColor");
        builder.Entity<Guild>().Property(e => e.BackgroundColor).HasColumnType("int");
        builder.Entity<Guild>().Property(e => e.BackgroundColor).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.BackgroundColor).IsRequired();
        builder.Entity<Guild>().Property(e => e.BorderColor).HasColumnName("BorderColor");
        builder.Entity<Guild>().Property(e => e.BorderColor).HasColumnType("int");
        builder.Entity<Guild>().Property(e => e.BorderColor).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.BorderColor).IsRequired();
        builder.Entity<Guild>().Property(e => e.BorderStyle).HasColumnName("BorderStyle");
        builder.Entity<Guild>().Property(e => e.BorderStyle).HasColumnType("int");
        builder.Entity<Guild>().Property(e => e.BorderStyle).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.BorderStyle).IsRequired();
        builder.Entity<Guild>().Property(e => e.Createdate).HasColumnName("createdate");
        builder.Entity<Guild>().Property(e => e.Createdate).HasColumnType("bigint unsigned");
        builder.Entity<Guild>().Property(e => e.Createdate).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Createdate).IsRequired();
        builder.Entity<Guild>().Property(e => e.EmblemColor).HasColumnName("EmblemColor");
        builder.Entity<Guild>().Property(e => e.EmblemColor).HasColumnType("int");
        builder.Entity<Guild>().Property(e => e.EmblemColor).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.EmblemColor).IsRequired();
        builder.Entity<Guild>().Property(e => e.EmblemStyle).HasColumnName("EmblemStyle");
        builder.Entity<Guild>().Property(e => e.EmblemStyle).HasColumnType("int");
        builder.Entity<Guild>().Property(e => e.EmblemStyle).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.EmblemStyle).IsRequired();
        builder.Entity<Guild>().Property(e => e.Guildid).HasColumnName("guildid");
        builder.Entity<Guild>().Property(e => e.Guildid).HasColumnType("int unsigned");
        builder.Entity<Guild>().Property(e => e.Guildid).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Guildid).IsRequired();
        builder.Entity<Guild>().Property(e => e.Info).HasColumnName("info");
        builder.Entity<Guild>().Property(e => e.Info).HasColumnType("varchar(500)");
        builder.Entity<Guild>().Property(e => e.Info).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Info).IsRequired();
        builder.Entity<Guild>().Property(e => e.Info).HasMaxLength(500);
        builder.Entity<Guild>().Property(e => e.Leaderguid).HasColumnName("leaderguid");
        builder.Entity<Guild>().Property(e => e.Leaderguid).HasColumnType("int unsigned");
        builder.Entity<Guild>().Property(e => e.Leaderguid).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Leaderguid).IsRequired();
        builder.Entity<Guild>().Property(e => e.Motd).HasColumnName("motd");
        builder.Entity<Guild>().Property(e => e.Motd).HasColumnType("varchar(128)");
        builder.Entity<Guild>().Property(e => e.Motd).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Motd).IsRequired();
        builder.Entity<Guild>().Property(e => e.Motd).HasMaxLength(128);
        builder.Entity<Guild>().Property(e => e.Name).HasColumnName("name");
        builder.Entity<Guild>().Property(e => e.Name).HasColumnType("varchar(255)");
        builder.Entity<Guild>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<Guild>().Property(e => e.Name).IsRequired();
        builder.Entity<Guild>().Property(e => e.Name).HasMaxLength(255);
        builder.Entity<GuildEventlog>().Property(e => e.EventType).HasColumnName("EventType");
        builder.Entity<GuildEventlog>().Property(e => e.EventType).HasColumnType("tinyint unsigned");
        builder.Entity<GuildEventlog>().Property(e => e.EventType).IsRequired();
        builder.Entity<GuildEventlog>().Property(e => e.Guildid).HasColumnName("guildid");
        builder.Entity<GuildEventlog>().Property(e => e.Guildid).HasColumnType("int unsigned");
        builder.Entity<GuildEventlog>().Property(e => e.Guildid).IsRequired();
        builder.Entity<GuildEventlog>().Property(e => e.LogGuid).HasColumnName("LogGuid");
        builder.Entity<GuildEventlog>().Property(e => e.LogGuid).HasColumnType("int unsigned");
        builder.Entity<GuildEventlog>().Property(e => e.LogGuid).IsRequired();
        builder.Entity<GuildEventlog>().Property(e => e.NewRank).HasColumnName("NewRank");
        builder.Entity<GuildEventlog>().Property(e => e.NewRank).HasColumnType("tinyint unsigned");
        builder.Entity<GuildEventlog>().Property(e => e.NewRank).IsRequired();
        builder.Entity<GuildEventlog>().Property(e => e.PlayerGuid1).HasColumnName("PlayerGuid1");
        builder.Entity<GuildEventlog>().Property(e => e.PlayerGuid1).HasColumnType("int unsigned");
        builder.Entity<GuildEventlog>().Property(e => e.PlayerGuid1).IsRequired();
        builder.Entity<GuildEventlog>().Property(e => e.PlayerGuid2).HasColumnName("PlayerGuid2");
        builder.Entity<GuildEventlog>().Property(e => e.PlayerGuid2).HasColumnType("int unsigned");
        builder.Entity<GuildEventlog>().Property(e => e.PlayerGuid2).IsRequired();
        builder.Entity<GuildEventlog>().Property(e => e.TimeStamp).HasColumnName("TimeStamp");
        builder.Entity<GuildEventlog>().Property(e => e.TimeStamp).HasColumnType("bigint unsigned");
        builder.Entity<GuildEventlog>().Property(e => e.TimeStamp).IsRequired();
        builder.Entity<GuildMember>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<GuildMember>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<GuildMember>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Guid).IsRequired();
        builder.Entity<GuildMember>().Property(e => e.Guildid).HasColumnName("guildid");
        builder.Entity<GuildMember>().Property(e => e.Guildid).HasColumnType("int unsigned");
        builder.Entity<GuildMember>().Property(e => e.Guildid).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Guildid).IsRequired();
        builder.Entity<GuildMember>().Property(e => e.Offnote).HasColumnName("offnote");
        builder.Entity<GuildMember>().Property(e => e.Offnote).HasColumnType("varchar(31)");
        builder.Entity<GuildMember>().Property(e => e.Offnote).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Offnote).IsRequired();
        builder.Entity<GuildMember>().Property(e => e.Offnote).HasMaxLength(31);
        builder.Entity<GuildMember>().Property(e => e.Pnote).HasColumnName("pnote");
        builder.Entity<GuildMember>().Property(e => e.Pnote).HasColumnType("varchar(31)");
        builder.Entity<GuildMember>().Property(e => e.Pnote).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Pnote).IsRequired();
        builder.Entity<GuildMember>().Property(e => e.Pnote).HasMaxLength(31);
        builder.Entity<GuildMember>().Property(e => e.Rank).HasColumnName("rank");
        builder.Entity<GuildMember>().Property(e => e.Rank).HasColumnType("tinyint unsigned");
        builder.Entity<GuildMember>().Property(e => e.Rank).HasDefaultValue();
        builder.Entity<GuildMember>().Property(e => e.Rank).IsRequired();
        builder.Entity<GuildRank>().Property(e => e.Guildid).HasColumnName("guildid");
        builder.Entity<GuildRank>().Property(e => e.Guildid).HasColumnType("int unsigned");
        builder.Entity<GuildRank>().Property(e => e.Guildid).HasDefaultValue();
        builder.Entity<GuildRank>().Property(e => e.Guildid).IsRequired();
        builder.Entity<GuildRank>().Property(e => e.Rid).HasColumnName("rid");
        builder.Entity<GuildRank>().Property(e => e.Rid).HasColumnType("int unsigned");
        builder.Entity<GuildRank>().Property(e => e.Rid).IsRequired();
        builder.Entity<GuildRank>().Property(e => e.Rights).HasColumnName("rights");
        builder.Entity<GuildRank>().Property(e => e.Rights).HasColumnType("int unsigned");
        builder.Entity<GuildRank>().Property(e => e.Rights).HasDefaultValue();
        builder.Entity<GuildRank>().Property(e => e.Rights).IsRequired();
        builder.Entity<GuildRank>().Property(e => e.Rname).HasColumnName("rname");
        builder.Entity<GuildRank>().Property(e => e.Rname).HasColumnType("varchar(255)");
        builder.Entity<GuildRank>().Property(e => e.Rname).HasDefaultValue();
        builder.Entity<GuildRank>().Property(e => e.Rname).IsRequired();
        builder.Entity<GuildRank>().Property(e => e.Rname).HasMaxLength(255);
        builder.Entity<Instance>().Property(e => e.Data).HasColumnName("data");
        builder.Entity<Instance>().Property(e => e.Data).HasColumnType("longtext");
        builder.Entity<Instance>().Property(e => e.EncountersMask).HasColumnName("encountersMask");
        builder.Entity<Instance>().Property(e => e.EncountersMask).HasColumnType("int unsigned");
        builder.Entity<Instance>().Property(e => e.EncountersMask).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.EncountersMask).IsRequired();
        builder.Entity<Instance>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<Instance>().Property(e => e.Id).HasColumnType("int unsigned");
        builder.Entity<Instance>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.Id).IsRequired();
        builder.Entity<Instance>().Property(e => e.Map).HasColumnName("map");
        builder.Entity<Instance>().Property(e => e.Map).HasColumnType("int unsigned");
        builder.Entity<Instance>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.Map).IsRequired();
        builder.Entity<Instance>().Property(e => e.Resettime).HasColumnName("resettime");
        builder.Entity<Instance>().Property(e => e.Resettime).HasColumnType("bigint unsigned");
        builder.Entity<Instance>().Property(e => e.Resettime).HasDefaultValue();
        builder.Entity<Instance>().Property(e => e.Resettime).IsRequired();
        builder.Entity<InstanceReset>().Property(e => e.Mapid).HasColumnName("mapid");
        builder.Entity<InstanceReset>().Property(e => e.Mapid).HasColumnType("int unsigned");
        builder.Entity<InstanceReset>().Property(e => e.Mapid).HasDefaultValue();
        builder.Entity<InstanceReset>().Property(e => e.Mapid).IsRequired();
        builder.Entity<InstanceReset>().Property(e => e.Resettime).HasColumnName("resettime");
        builder.Entity<InstanceReset>().Property(e => e.Resettime).HasColumnType("bigint unsigned");
        builder.Entity<InstanceReset>().Property(e => e.Resettime).HasDefaultValue();
        builder.Entity<InstanceReset>().Property(e => e.Resettime).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.Charges).HasColumnName("charges");
        builder.Entity<ItemInstance>().Property(e => e.Charges).HasColumnType("text");
        builder.Entity<ItemInstance>().Property(e => e.Charges).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.Charges).HasMaxLength(65535);
        builder.Entity<ItemInstance>().Property(e => e.Count).HasColumnName("count");
        builder.Entity<ItemInstance>().Property(e => e.Count).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.Count).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Count).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.CreatorGuid).HasColumnName("creatorGuid");
        builder.Entity<ItemInstance>().Property(e => e.CreatorGuid).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.CreatorGuid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.CreatorGuid).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.Durability).HasColumnName("durability");
        builder.Entity<ItemInstance>().Property(e => e.Durability).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.Durability).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Durability).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.Duration).HasColumnName("duration");
        builder.Entity<ItemInstance>().Property(e => e.Duration).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.Duration).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Duration).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.Enchantments).HasColumnName("enchantments");
        builder.Entity<ItemInstance>().Property(e => e.Enchantments).HasColumnType("text");
        builder.Entity<ItemInstance>().Property(e => e.Enchantments).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.Enchantments).HasMaxLength(65535);
        builder.Entity<ItemInstance>().Property(e => e.Flags).HasColumnName("flags");
        builder.Entity<ItemInstance>().Property(e => e.Flags).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.Flags).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Flags).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.GiftCreatorGuid).HasColumnName("giftCreatorGuid");
        builder.Entity<ItemInstance>().Property(e => e.GiftCreatorGuid).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.GiftCreatorGuid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.GiftCreatorGuid).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<ItemInstance>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.Guid).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.ItemEntry).HasColumnName("itemEntry");
        builder.Entity<ItemInstance>().Property(e => e.ItemEntry).HasColumnType("mediumint unsigned");
        builder.Entity<ItemInstance>().Property(e => e.ItemEntry).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.ItemEntry).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.ItemTextId).HasColumnName("itemTextId");
        builder.Entity<ItemInstance>().Property(e => e.ItemTextId).HasColumnType("mediumint unsigned");
        builder.Entity<ItemInstance>().Property(e => e.ItemTextId).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.ItemTextId).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.OwnerGuid).HasColumnName("owner_guid");
        builder.Entity<ItemInstance>().Property(e => e.OwnerGuid).HasColumnType("int unsigned");
        builder.Entity<ItemInstance>().Property(e => e.OwnerGuid).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.OwnerGuid).IsRequired();
        builder.Entity<ItemInstance>().Property(e => e.RandomPropertyId).HasColumnName("randomPropertyId");
        builder.Entity<ItemInstance>().Property(e => e.RandomPropertyId).HasColumnType("smallint");
        builder.Entity<ItemInstance>().Property(e => e.RandomPropertyId).HasDefaultValue();
        builder.Entity<ItemInstance>().Property(e => e.RandomPropertyId).IsRequired();
        builder.Entity<ItemLoot>().Property(e => e.Amount).HasColumnName("amount");
        builder.Entity<ItemLoot>().Property(e => e.Amount).HasColumnType("int unsigned");
        builder.Entity<ItemLoot>().Property(e => e.Amount).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Amount).IsRequired();
        builder.Entity<ItemLoot>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<ItemLoot>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<ItemLoot>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Guid).IsRequired();
        builder.Entity<ItemLoot>().Property(e => e.Itemid).HasColumnName("itemid");
        builder.Entity<ItemLoot>().Property(e => e.Itemid).HasColumnType("int unsigned");
        builder.Entity<ItemLoot>().Property(e => e.Itemid).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Itemid).IsRequired();
        builder.Entity<ItemLoot>().Property(e => e.OwnerGuid).HasColumnName("owner_guid");
        builder.Entity<ItemLoot>().Property(e => e.OwnerGuid).HasColumnType("int unsigned");
        builder.Entity<ItemLoot>().Property(e => e.OwnerGuid).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.OwnerGuid).IsRequired();
        builder.Entity<ItemLoot>().Property(e => e.Property).HasColumnName("property");
        builder.Entity<ItemLoot>().Property(e => e.Property).HasColumnType("int");
        builder.Entity<ItemLoot>().Property(e => e.Property).HasDefaultValue();
        builder.Entity<ItemLoot>().Property(e => e.Property).IsRequired();
        builder.Entity<ItemText>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<ItemText>().Property(e => e.Id).HasColumnType("int unsigned");
        builder.Entity<ItemText>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<ItemText>().Property(e => e.Id).IsRequired();
        builder.Entity<ItemText>().Property(e => e.Text).HasColumnName("text");
        builder.Entity<ItemText>().Property(e => e.Text).HasColumnType("longtext");
        builder.Entity<Mail>().Property(e => e.Checked).HasColumnName("checked");
        builder.Entity<Mail>().Property(e => e.Checked).HasColumnType("tinyint unsigned");
        builder.Entity<Mail>().Property(e => e.Checked).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Checked).IsRequired();
        builder.Entity<Mail>().Property(e => e.Cod).HasColumnName("cod");
        builder.Entity<Mail>().Property(e => e.Cod).HasColumnType("int unsigned");
        builder.Entity<Mail>().Property(e => e.Cod).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Cod).IsRequired();
        builder.Entity<Mail>().Property(e => e.DeliverTime).HasColumnName("deliver_time");
        builder.Entity<Mail>().Property(e => e.DeliverTime).HasColumnType("bigint unsigned");
        builder.Entity<Mail>().Property(e => e.DeliverTime).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.DeliverTime).IsRequired();
        builder.Entity<Mail>().Property(e => e.ExpireTime).HasColumnName("expire_time");
        builder.Entity<Mail>().Property(e => e.ExpireTime).HasColumnType("bigint unsigned");
        builder.Entity<Mail>().Property(e => e.ExpireTime).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.ExpireTime).IsRequired();
        builder.Entity<Mail>().Property(e => e.HasItems).HasColumnName("has_items");
        builder.Entity<Mail>().Property(e => e.HasItems).HasColumnType("tinyint unsigned");
        builder.Entity<Mail>().Property(e => e.HasItems).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.HasItems).IsRequired();
        builder.Entity<Mail>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<Mail>().Property(e => e.Id).HasColumnType("int unsigned");
        builder.Entity<Mail>().Property(e => e.Id).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Id).IsRequired();
        builder.Entity<Mail>().Property(e => e.ItemTextId).HasColumnName("itemTextId");
        builder.Entity<Mail>().Property(e => e.ItemTextId).HasColumnType("int unsigned");
        builder.Entity<Mail>().Property(e => e.ItemTextId).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.ItemTextId).IsRequired();
        builder.Entity<Mail>().Property(e => e.MailTemplateId).HasColumnName("mailTemplateId");
        builder.Entity<Mail>().Property(e => e.MailTemplateId).HasColumnType("mediumint unsigned");
        builder.Entity<Mail>().Property(e => e.MailTemplateId).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.MailTemplateId).IsRequired();
        builder.Entity<Mail>().Property(e => e.MessageType).HasColumnName("messageType");
        builder.Entity<Mail>().Property(e => e.MessageType).HasColumnType("tinyint unsigned");
        builder.Entity<Mail>().Property(e => e.MessageType).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.MessageType).IsRequired();
        builder.Entity<Mail>().Property(e => e.Money).HasColumnName("money");
        builder.Entity<Mail>().Property(e => e.Money).HasColumnType("int unsigned");
        builder.Entity<Mail>().Property(e => e.Money).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Money).IsRequired();
        builder.Entity<Mail>().Property(e => e.Receiver).HasColumnName("receiver");
        builder.Entity<Mail>().Property(e => e.Receiver).HasColumnType("int unsigned");
        builder.Entity<Mail>().Property(e => e.Receiver).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Receiver).IsRequired();
        builder.Entity<Mail>().Property(e => e.Sender).HasColumnName("sender");
        builder.Entity<Mail>().Property(e => e.Sender).HasColumnType("int unsigned");
        builder.Entity<Mail>().Property(e => e.Sender).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Sender).IsRequired();
        builder.Entity<Mail>().Property(e => e.Stationery).HasColumnName("stationery");
        builder.Entity<Mail>().Property(e => e.Stationery).HasColumnType("tinyint");
        builder.Entity<Mail>().Property(e => e.Stationery).HasDefaultValue();
        builder.Entity<Mail>().Property(e => e.Stationery).IsRequired();
        builder.Entity<Mail>().Property(e => e.Subject).HasColumnName("subject");
        builder.Entity<Mail>().Property(e => e.Subject).HasColumnType("longtext");
        builder.Entity<MailItems>().Property(e => e.ItemGuid).HasColumnName("item_guid");
        builder.Entity<MailItems>().Property(e => e.ItemGuid).HasColumnType("int");
        builder.Entity<MailItems>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.ItemGuid).IsRequired();
        builder.Entity<MailItems>().Property(e => e.ItemTemplate).HasColumnName("item_template");
        builder.Entity<MailItems>().Property(e => e.ItemTemplate).HasColumnType("int");
        builder.Entity<MailItems>().Property(e => e.ItemTemplate).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.ItemTemplate).IsRequired();
        builder.Entity<MailItems>().Property(e => e.MailId).HasColumnName("mail_id");
        builder.Entity<MailItems>().Property(e => e.MailId).HasColumnType("int");
        builder.Entity<MailItems>().Property(e => e.MailId).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.MailId).IsRequired();
        builder.Entity<MailItems>().Property(e => e.Receiver).HasColumnName("receiver");
        builder.Entity<MailItems>().Property(e => e.Receiver).HasColumnType("int unsigned");
        builder.Entity<MailItems>().Property(e => e.Receiver).HasDefaultValue();
        builder.Entity<MailItems>().Property(e => e.Receiver).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Basepoints0).HasColumnName("basepoints0");
        builder.Entity<PetAura>().Property(e => e.Basepoints0).HasColumnType("int");
        builder.Entity<PetAura>().Property(e => e.Basepoints0).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Basepoints0).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Basepoints1).HasColumnName("basepoints1");
        builder.Entity<PetAura>().Property(e => e.Basepoints1).HasColumnType("int");
        builder.Entity<PetAura>().Property(e => e.Basepoints1).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Basepoints1).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Basepoints2).HasColumnName("basepoints2");
        builder.Entity<PetAura>().Property(e => e.Basepoints2).HasColumnType("int");
        builder.Entity<PetAura>().Property(e => e.Basepoints2).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Basepoints2).IsRequired();
        builder.Entity<PetAura>().Property(e => e.CasterGuid).HasColumnName("caster_guid");
        builder.Entity<PetAura>().Property(e => e.CasterGuid).HasColumnType("bigint unsigned");
        builder.Entity<PetAura>().Property(e => e.CasterGuid).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.CasterGuid).IsRequired();
        builder.Entity<PetAura>().Property(e => e.EffIndexMask).HasColumnName("effIndexMask");
        builder.Entity<PetAura>().Property(e => e.EffIndexMask).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.EffIndexMask).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.EffIndexMask).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<PetAura>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Guid).IsRequired();
        builder.Entity<PetAura>().Property(e => e.ItemGuid).HasColumnName("item_guid");
        builder.Entity<PetAura>().Property(e => e.ItemGuid).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.ItemGuid).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.ItemGuid).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Maxduration).HasColumnName("maxduration");
        builder.Entity<PetAura>().Property(e => e.Maxduration).HasColumnType("int");
        builder.Entity<PetAura>().Property(e => e.Maxduration).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Maxduration).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Periodictime0).HasColumnName("periodictime0");
        builder.Entity<PetAura>().Property(e => e.Periodictime0).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.Periodictime0).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Periodictime0).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Periodictime1).HasColumnName("periodictime1");
        builder.Entity<PetAura>().Property(e => e.Periodictime1).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.Periodictime1).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Periodictime1).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Periodictime2).HasColumnName("periodictime2");
        builder.Entity<PetAura>().Property(e => e.Periodictime2).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.Periodictime2).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Periodictime2).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Remaincharges).HasColumnName("remaincharges");
        builder.Entity<PetAura>().Property(e => e.Remaincharges).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.Remaincharges).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Remaincharges).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Remaintime).HasColumnName("remaintime");
        builder.Entity<PetAura>().Property(e => e.Remaintime).HasColumnType("int");
        builder.Entity<PetAura>().Property(e => e.Remaintime).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Remaintime).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Spell).HasColumnName("spell");
        builder.Entity<PetAura>().Property(e => e.Spell).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Spell).IsRequired();
        builder.Entity<PetAura>().Property(e => e.Stackcount).HasColumnName("stackcount");
        builder.Entity<PetAura>().Property(e => e.Stackcount).HasColumnType("int unsigned");
        builder.Entity<PetAura>().Property(e => e.Stackcount).HasDefaultValue();
        builder.Entity<PetAura>().Property(e => e.Stackcount).IsRequired();
        builder.Entity<PetSpell>().Property(e => e.Active).HasColumnName("active");
        builder.Entity<PetSpell>().Property(e => e.Active).HasColumnType("int unsigned");
        builder.Entity<PetSpell>().Property(e => e.Active).HasDefaultValue();
        builder.Entity<PetSpell>().Property(e => e.Active).IsRequired();
        builder.Entity<PetSpell>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<PetSpell>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<PetSpell>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PetSpell>().Property(e => e.Guid).IsRequired();
        builder.Entity<PetSpell>().Property(e => e.Spell).HasColumnName("spell");
        builder.Entity<PetSpell>().Property(e => e.Spell).HasColumnType("int unsigned");
        builder.Entity<PetSpell>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<PetSpell>().Property(e => e.Spell).IsRequired();
        builder.Entity<PetSpellCooldown>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<PetSpellCooldown>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<PetSpellCooldown>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PetSpellCooldown>().Property(e => e.Guid).IsRequired();
        builder.Entity<PetSpellCooldown>().Property(e => e.Spell).HasColumnName("spell");
        builder.Entity<PetSpellCooldown>().Property(e => e.Spell).HasColumnType("int unsigned");
        builder.Entity<PetSpellCooldown>().Property(e => e.Spell).HasDefaultValue();
        builder.Entity<PetSpellCooldown>().Property(e => e.Spell).IsRequired();
        builder.Entity<PetSpellCooldown>().Property(e => e.Time).HasColumnName("time");
        builder.Entity<PetSpellCooldown>().Property(e => e.Time).HasColumnType("bigint unsigned");
        builder.Entity<PetSpellCooldown>().Property(e => e.Time).HasDefaultValue();
        builder.Entity<PetSpellCooldown>().Property(e => e.Time).IsRequired();
        builder.Entity<Petition>().Property(e => e.Name).HasColumnName("name");
        builder.Entity<Petition>().Property(e => e.Name).HasColumnType("varchar(255)");
        builder.Entity<Petition>().Property(e => e.Name).HasDefaultValue();
        builder.Entity<Petition>().Property(e => e.Name).IsRequired();
        builder.Entity<Petition>().Property(e => e.Name).HasMaxLength(255);
        builder.Entity<Petition>().Property(e => e.Ownerguid).HasColumnName("ownerguid");
        builder.Entity<Petition>().Property(e => e.Ownerguid).HasColumnType("int unsigned");
        builder.Entity<Petition>().Property(e => e.Ownerguid).IsRequired();
        builder.Entity<Petition>().Property(e => e.Petitionguid).HasColumnName("petitionguid");
        builder.Entity<Petition>().Property(e => e.Petitionguid).HasColumnType("int unsigned");
        builder.Entity<Petition>().Property(e => e.Petitionguid).HasDefaultValue();
        builder.Entity<PetitionSign>().Property(e => e.Ownerguid).HasColumnName("ownerguid");
        builder.Entity<PetitionSign>().Property(e => e.Ownerguid).HasColumnType("int unsigned");
        builder.Entity<PetitionSign>().Property(e => e.Ownerguid).IsRequired();
        builder.Entity<PetitionSign>().Property(e => e.Petitionguid).HasColumnName("petitionguid");
        builder.Entity<PetitionSign>().Property(e => e.Petitionguid).HasColumnType("int unsigned");
        builder.Entity<PetitionSign>().Property(e => e.Petitionguid).HasDefaultValue();
        builder.Entity<PetitionSign>().Property(e => e.Petitionguid).IsRequired();
        builder.Entity<PetitionSign>().Property(e => e.PlayerAccount).HasColumnName("player_account");
        builder.Entity<PetitionSign>().Property(e => e.PlayerAccount).HasColumnType("int unsigned");
        builder.Entity<PetitionSign>().Property(e => e.PlayerAccount).HasDefaultValue();
        builder.Entity<PetitionSign>().Property(e => e.PlayerAccount).IsRequired();
        builder.Entity<PetitionSign>().Property(e => e.Playerguid).HasColumnName("playerguid");
        builder.Entity<PetitionSign>().Property(e => e.Playerguid).HasColumnType("int unsigned");
        builder.Entity<PetitionSign>().Property(e => e.Playerguid).HasDefaultValue();
        builder.Entity<PetitionSign>().Property(e => e.Playerguid).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatDelay).HasColumnName("combat_delay");
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatDelay).HasColumnType("int unsigned");
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatDelay).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatDelay).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatOrder).HasColumnName("combat_order");
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatOrder).HasColumnType("tinyint unsigned");
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatOrder).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.CombatOrder).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Guid).HasColumnName("guid");
        builder.Entity<PlayerbotSavedData>().Property(e => e.Guid).HasColumnType("int unsigned");
        builder.Entity<PlayerbotSavedData>().Property(e => e.Guid).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Guid).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Pname).HasColumnName("pname");
        builder.Entity<PlayerbotSavedData>().Property(e => e.Pname).HasColumnType("varchar(12)");
        builder.Entity<PlayerbotSavedData>().Property(e => e.Pname).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Pname).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Pname).HasMaxLength(12);
        builder.Entity<PlayerbotSavedData>().Property(e => e.PrimaryTarget).HasColumnName("primary_target");
        builder.Entity<PlayerbotSavedData>().Property(e => e.PrimaryTarget).HasColumnType("int unsigned");
        builder.Entity<PlayerbotSavedData>().Property(e => e.PrimaryTarget).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.PrimaryTarget).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.SecondaryTarget).HasColumnName("secondary_target");
        builder.Entity<PlayerbotSavedData>().Property(e => e.SecondaryTarget).HasColumnType("int unsigned");
        builder.Entity<PlayerbotSavedData>().Property(e => e.SecondaryTarget).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.SecondaryTarget).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Sname).HasColumnName("sname");
        builder.Entity<PlayerbotSavedData>().Property(e => e.Sname).HasColumnType("varchar(12)");
        builder.Entity<PlayerbotSavedData>().Property(e => e.Sname).HasDefaultValue();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Sname).IsRequired();
        builder.Entity<PlayerbotSavedData>().Property(e => e.Sname).HasMaxLength(12);
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.BracketId).HasColumnName("bracket_id");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.BracketId).HasColumnType("tinyint unsigned");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.BracketId).IsRequired();
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Date).HasColumnName("date");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Date).HasColumnType("datetime");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Date).IsRequired();
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Id).HasColumnName("id");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Id).HasColumnType("bigint unsigned");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Id).IsRequired();
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Type).HasColumnName("type");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Type).HasColumnType("tinyint unsigned");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.Type).IsRequired();
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.WinnerTeam).HasColumnName("winner_team");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.WinnerTeam).HasColumnType("tinyint");
        builder.Entity<PvpstatsBattlegrounds>().Property(e => e.WinnerTeam).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr1).HasColumnName("attr_1");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr1).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr1).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr1).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr2).HasColumnName("attr_2");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr2).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr2).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr2).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr3).HasColumnName("attr_3");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr3).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr3).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr3).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr4).HasColumnName("attr_4");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr4).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr4).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr4).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr5).HasColumnName("attr_5");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr5).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr5).HasDefaultValue();
        builder.Entity<PvpstatsPlayers>().Property(e => e.Attr5).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.BattlegroundId).HasColumnName("battleground_id");
        builder.Entity<PvpstatsPlayers>().Property(e => e.BattlegroundId).HasColumnType("bigint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.BattlegroundId).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.CharacterGuid).HasColumnName("character_guid");
        builder.Entity<PvpstatsPlayers>().Property(e => e.CharacterGuid).HasColumnType("int unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.CharacterGuid).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreBonusHonor).HasColumnName("score_bonus_honor");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreBonusHonor).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreBonusHonor).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreDamageDone).HasColumnName("score_damage_done");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreDamageDone).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreDamageDone).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreDeaths).HasColumnName("score_deaths");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreDeaths).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreDeaths).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreHealingDone).HasColumnName("score_healing_done");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreHealingDone).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreHealingDone).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreHonorableKills).HasColumnName("score_honorable_kills");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreHonorableKills).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreHonorableKills).IsRequired();
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreKillingBlows).HasColumnName("score_killing_blows");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreKillingBlows).HasColumnType("mediumint unsigned");
        builder.Entity<PvpstatsPlayers>().Property(e => e.ScoreKillingBlows).IsRequired();
        builder.Entity<SavedVariables>().Property(e => e.CleaningFlags).HasColumnName("cleaning_flags");
        builder.Entity<SavedVariables>().Property(e => e.CleaningFlags).HasColumnType("int unsigned");
        builder.Entity<SavedVariables>().Property(e => e.CleaningFlags).HasDefaultValue();
        builder.Entity<SavedVariables>().Property(e => e.CleaningFlags).IsRequired();
        builder.Entity<SavedVariables>().Property(e => e.NextMaintenanceDate).HasColumnName("NextMaintenanceDate");
        builder.Entity<SavedVariables>().Property(e => e.NextMaintenanceDate).HasColumnType("int unsigned");
        builder.Entity<SavedVariables>().Property(e => e.NextMaintenanceDate).HasDefaultValue();
        builder.Entity<SavedVariables>().Property(e => e.NextMaintenanceDate).IsRequired();
        builder.Entity<SavedVariables>().Property(e => e.NextWeeklyQuestResetTime).HasColumnName("NextWeeklyQuestResetTime");
        builder.Entity<SavedVariables>().Property(e => e.NextWeeklyQuestResetTime).HasColumnType("bigint unsigned");
        builder.Entity<SavedVariables>().Property(e => e.NextWeeklyQuestResetTime).HasDefaultValue();
        builder.Entity<SavedVariables>().Property(e => e.NextWeeklyQuestResetTime).IsRequired();
        builder.Entity<World>().Property(e => e.Data).HasColumnName("data");
        builder.Entity<World>().Property(e => e.Data).HasColumnType("longtext");
        builder.Entity<World>().Property(e => e.Map).HasColumnName("map");
        builder.Entity<World>().Property(e => e.Map).HasColumnType("int unsigned");
        builder.Entity<World>().Property(e => e.Map).HasDefaultValue();
        builder.Entity<World>().Property(e => e.Map).IsRequired();
        builder.Entity<WorldState>().Property(e => e.Data).HasColumnName("Data");
        builder.Entity<WorldState>().Property(e => e.Data).HasColumnType("longtext");
        builder.Entity<WorldState>().Property(e => e.Id).HasColumnName("Id");
        builder.Entity<WorldState>().Property(e => e.Id).HasColumnType("int unsigned");
        builder.Entity<WorldState>().Property(e => e.Id).IsRequired();
    }

    public DbSet<AccountInstancesEntered> AccountInstancesEntereds { get; set; }
    public DbSet<AhbotItems> AhbotItems { get; set; }
    public DbSet<Auction> Auctions { get; set; }
    public DbSet<Bugreport> Bugreports { get; set; }
    public DbSet<CharacterAction> CharacterActions { get; set; }
    public DbSet<CharacterAura> CharacterAuras { get; set; }
    public DbSet<CharacterBattlegroundData> CharacterBattlegroundDatas { get; set; }
    public DbSet<CharacterGifts> CharacterGifts { get; set; }
    public DbSet<CharacterHomebind> CharacterHomebinds { get; set; }
    public DbSet<CharacterHonorCp> CharacterHonorCps { get; set; }
    public DbSet<CharacterInstance> CharacterInstances { get; set; }
    public DbSet<CharacterInventory> CharacterInventories { get; set; }
    public DbSet<CharacterPet> CharacterPets { get; set; }
    public DbSet<CharacterQueststatus> CharacterQueststatus { get; set; }
    public DbSet<CharacterQueststatusWeekly> CharacterQueststatusWeeklies { get; set; }
    public DbSet<CharacterReputation> CharacterReputations { get; set; }
    public DbSet<CharacterSkills> CharacterSkills { get; set; }
    public DbSet<CharacterSocial> CharacterSocials { get; set; }
    public DbSet<CharacterSpell> CharacterSpells { get; set; }
    public DbSet<CharacterSpellCooldown> CharacterSpellCooldowns { get; set; }
    public DbSet<CharacterStats> CharacterStats { get; set; }
    public DbSet<CharacterTutorial> CharacterTutorials { get; set; }
    public DbSet<Characters> Characters { get; set; }
    public DbSet<Corpse> Corpses { get; set; }
    public DbSet<CreatureRespawn> CreatureRespawns { get; set; }
    public DbSet<GameEventStatus> GameEventStatus { get; set; }
    public DbSet<GameobjectRespawn> GameobjectRespawns { get; set; }
    public DbSet<GmSurveys> GmSurveys { get; set; }
    public DbSet<GmTickets> GmTickets { get; set; }
    public DbSet<GroupInstance> GroupInstances { get; set; }
    public DbSet<GroupMember> GroupMembers { get; set; }
    public DbSet<Groups> Groups { get; set; }
    public DbSet<Guild> Guilds { get; set; }
    public DbSet<GuildEventlog> GuildEventlogs { get; set; }
    public DbSet<GuildMember> GuildMembers { get; set; }
    public DbSet<GuildRank> GuildRanks { get; set; }
    public DbSet<Instance> Instances { get; set; }
    public DbSet<InstanceReset> InstanceResets { get; set; }
    public DbSet<ItemInstance> ItemInstances { get; set; }
    public DbSet<ItemLoot> ItemLoots { get; set; }
    public DbSet<ItemText> ItemTexts { get; set; }
    public DbSet<Mail> Mails { get; set; }
    public DbSet<MailItems> MailItems { get; set; }
    public DbSet<PetAura> PetAuras { get; set; }
    public DbSet<PetSpell> PetSpells { get; set; }
    public DbSet<PetSpellCooldown> PetSpellCooldowns { get; set; }
    public DbSet<Petition> Petitions { get; set; }
    public DbSet<PetitionSign> PetitionSigns { get; set; }
    public DbSet<PlayerbotSavedData> PlayerbotSavedDatas { get; set; }
    public DbSet<PvpstatsBattlegrounds> PvpstatsBattlegrounds { get; set; }
    public DbSet<PvpstatsPlayers> PvpstatsPlayers { get; set; }
    public DbSet<SavedVariables> SavedVariables { get; set; }
    public DbSet<World> Worlds { get; set; }
    public DbSet<WorldState> WorldStates { get; set; }
}
